/**
 * @license
 * Copyright 2020 Sébastien CANET
 * SPDX-License-Identifier: BSD-3-Clause
 */

/**
 * @fileoverview DHT temperature & humidity sensors blocks for Blockly.
 * @author scanet@libreduc.cc (Sébastien Canet)
 */

'use strict';

goog.provide('Blockly.Arduino.WIFI_ESP_UART');

goog.require('Blockly.Arduino');

Blockly.Arduino['WIFI_ESP_UART_DEFINE'] = function(block) {
    var value_rx = Blockly.Arduino.valueToCode(block, 'Rx', Blockly.Arduino.ORDER_ATOMIC);
    var value_tx = Blockly.Arduino.valueToCode(block, 'Tx', Blockly.Arduino.ORDER_ATOMIC);
    var value_name = Blockly.Arduino.valueToCode(block, 'NAME', Blockly.Arduino.ORDER_ATOMIC);
    value_name = value_name.replace('"', '').replace('"', '');
    var value_speed = Blockly.Arduino.valueToCode(block, 'SPEED', Blockly.Arduino.ORDER_ATOMIC);
    Blockly.Arduino.includes_['WIFI_ESP_UART_DEFINE'] = '#include <SoftwareSerial.h>';
    Blockly.Arduino.definitions_['WIFI_ESP_UART_DEFINE'] = 'SoftwareSerial ' + value_name + '(' + value_rx + ', ' + value_tx + ');';
    Blockly.Arduino.setups_['WIFI_ESP_UART_DEFINE'] = value_name + '.begin(' + value_speed + ');';
    return '';
};

Blockly.Arduino['WIFI_ESP_UART_SERVER_DEFINE'] = function(block) {
    var value_serial_name = Blockly.Arduino.valueToCode(block, 'SERIAL_NAME', Blockly.Arduino.ORDER_ATOMIC);
    value_serial_name = value_serial_name.replace('"', '').replace('"', '');
    var value_name = Blockly.Arduino.valueToCode(block, 'NAME', Blockly.Arduino.ORDER_ATOMIC);
    value_name = value_name.replace('"', '').replace('"', '');
    var value_port = Blockly.Arduino.valueToCode(block, 'PORT', Blockly.Arduino.ORDER_ATOMIC);
    Blockly.Arduino.includes_['WIFI_ESP_UART_server_' + value_port] = '#include <WiFiEsp.h>';
    Blockly.Arduino.definitions_['WIFI_ESP_UART_server_' + value_port] = 'WiFiEspServer ' + value_name + '(' + value_port + ');';
    Blockly.Arduino.definitions_['WIFI_ESP_UART_server_status'] = 'byte status = WL_IDLE_STATUS;     // the Wifi radio\'s status;';
    Blockly.Arduino.setups_['WIFI_ESP_UART_server_' + value_port] = 'WiFi.init(&' + value_serial_name + ');';
    return '';
}

Blockly.Arduino['WIFI_ESP_UART_CHECK_SHIELD'] = function(block) {
    var code = 'if (WiFi.status() == WL_NO_SHIELD) {\n' +
        '  Serial.println("WiFi shield not present");\n' +
        '  while (true);\n' +
        '}\n';
    return code;
};

Blockly.Arduino['WIFI_ESP_UART_BEGIN'] = function(block) {
    var value_ssid = Blockly.Arduino.valueToCode(block, 'SSID', Blockly.Arduino.ORDER_ATOMIC);
    var value_pass = Blockly.Arduino.valueToCode(block, 'PASS', Blockly.Arduino.ORDER_ATOMIC);
    var code = 'while (status != WL_CONNECTED) {\n' +
        '  Serial.println("Connect to WPA/WPA2 network");\n' +
        '  status = WiFi.begin(' + value_ssid + ', ' + value_pass + ');\n' +
        '}\n';
    return code;
}

Blockly.Arduino['WIFI_ESP_UART_LOCALIP'] = function(block) {
    var code = 'String() + WiFi.localIP()[0] + "." + WiFi.localIP()[1] + "." + WiFi.localIP()[2] + "." + WiFi.localIP()[3]';
    return [code, Blockly.Arduino.ORDER_ATOMIC];
};

Blockly.Arduino['WIFI_ESP_UART_SSID'] = function(block) {
    var code = 'WiFi.SSID()';
    return [code, Blockly.Arduino.ORDER_ATOMIC];
};

Blockly.Arduino['WIFI_ESP_UART_SERVER_BEGIN'] = function(block) {
    var value_name = Blockly.Arduino.valueToCode(block, 'NAME', Blockly.Arduino.ORDER_ATOMIC);
    value_name = value_name.replace('"', '').replace('"', '');
    var code = value_name + '.begin();\n';
    return code;
};

Blockly.Arduino['WIFI_ESP_UART_SERVER_AVAILABLE'] = function(block) {
    var value_name = Blockly.Arduino.valueToCode(block, 'NAME', Blockly.Arduino.ORDER_ATOMIC);
    value_name = value_name.replace('"', '').replace('"', '');
    var code = 'WiFiEspClient client = ' + value_name + '.available();\n';
    return code;
};

Blockly.Arduino['WIFI_ESP_UART_SERVER_CLIENT_OBJECT'] = function(block) {
    var code = 'client';
    return [code, Blockly.Arduino.ORDER_ATOMIC];
};

Blockly.Arduino['WIFI_ESP_UART_SERVER_CLIENT_CONNECTED'] = function(block) {
    var code = 'client.connected()';
    return [code, Blockly.Arduino.ORDER_ATOMIC];
};

Blockly.Arduino['WIFI_ESP_UART_SERVER_CLIENT_AVAILABLE'] = function(block) {
    var code = 'client.available()';
    return [code, Blockly.Arduino.ORDER_ATOMIC];
};

Blockly.Arduino['WIFI_ESP_UART_SERVER_CLIENT_READ'] = function(block) {
    var code = 'client.read()';
    return [code, Blockly.Arduino.ORDER_ATOMIC];
};

Blockly.Arduino['WIFI_ESP_UART_SERVER_CLIENT_STOP'] = function(block) {
    var code = 'client.stop();\n';
    return code;
};

Blockly.Arduino['WIFI_ESP_UART_SERVER_CLIENT_PRINT'] = function(block) {
    var value_name = Blockly.Arduino.valueToCode(block, 'NAME', Blockly.Arduino.ORDER_ATOMIC);
    value_name = value_name.replaceAll(/\\\\/g, '\\');
    var code = 'client.print(' + value_name + ');\n';
    return code;
};

Blockly.Arduino['WIFI_ESP_UART_SERVER_CLIENT_PRINT_MULTILINETEXTINPUT'] = function(block) {
    var value_name = block.getFieldValue('NAME');
    value_name = '"' + value_name.replaceAll('\n', '" + "') + '"';
    value_name = value_name.replaceAll(/\\\\/g, '\\');
    var code = 'client.print(' + value_name + ');\n';
    return code;
};