/**
 * @license
 * Copyright 2012 Fred Lin
 * SPDX-License-Identifier: Apache-2.0
 */

/**
 * @fileoverview Servomotor blocks for Blockly.
 * @author gasolin@gmail.com (Fred Lin)
 * @author scanet@libreduc.cc (SÃ©bastien Canet)
 */

'use strict';

goog.provide('Blockly.Constants.servo');

goog.require('Blockly');
goog.require('Blockly.Blocks');
goog.require('Blockly.Types');

var servoMediaFolder = "./S4E/categories/servo/";

Blockly.Blocks['SERVO_MOVE_EXTERNAL'] = {
    init: function() {
        this.appendDummyInput()
            .appendField(Blockly.Msg["SERVO_MOVE_INPUT"])
            .appendField(new Blockly.FieldImage(servoMediaFolder + "servo.jpg", Code.imageSize, Code.imageSize))
            .appendField(Blockly.Msg["SERVO_PIN"])
            .appendField(new Blockly.FieldDropdown(profile["default"][0].dropdownDigital), "PIN");
        this.appendValueInput("DEGREE")
            .setCheck(Blockly.Types.UNS_NUMBER)
            .setAlign(Blockly.ALIGN_RIGHT)
            .appendField(Blockly.Msg["SERVO_MOVE_DEGREE"]);
        // this.appendDummyInput("")
        //     .setAlign(Blockly.ALIGN_RIGHT)
        //     .appendField(
        //         new Blockly.FieldInstance('toto',
        //             'SERVOMOT',
        //             false, false, false),
        //         'SERVO_NAME');
        this.setPreviousStatement(true, null);
        this.setNextStatement(true, null);
        this.setTooltip(Blockly.Msg["SERVO_MOVE_TOOLTIP"]);
        this.setHelpUrl(Blockly.Msg["SERVO_MOVE_HELPURL"]);
        this.setStyle('servo_blocks');
    }
};

Blockly.Blocks['SERVO_MOVE_SLIDER'] = {
    init: function() {
        this.appendDummyInput()
            .appendField(Blockly.Msg["SERVO_MOVE_INPUT"])
            .appendField(new Blockly.FieldImage(servoMediaFolder + "servo.jpg", Code.imageSize, Code.imageSize))
            .appendField(Blockly.Msg["SERVO_PIN"])
            .appendField(new Blockly.FieldDropdown(profile["default"][0].dropdownDigital), "PIN");
        this.appendDummyInput("DEGREE")
            .setAlign(Blockly.ALIGN_RIGHT)
            .appendField(Blockly.Msg["SERVO_MOVE_DEGREE"])
            .appendField(new FieldSlider(90, 0, 180, 5), "DEGREE");
        this.setPreviousStatement(true, null);
        this.setNextStatement(true, null);
        this.setTooltip(Blockly.Msg["SERVO_MOVE_TOOLTIP"]);
        this.setHelpUrl(Blockly.Msg["SERVO_MOVE_HELPURL"]);
        this.setStyle('servo_blocks');
    }
};

Blockly.Blocks['SERVO_READ_DEGREES'] = {
    init: function() {
        this.appendDummyInput()
            .appendField(Blockly.Msg["SERVO_READ_DEGREES_INPUT"])
            .appendField(new Blockly.FieldImage(servoMediaFolder + "servo.jpg", Code.imageSize, Code.imageSize))
            .appendField(Blockly.Msg["SERVO_PIN"])
            .appendField(new Blockly.FieldDropdown(profile["default"][0].dropdownDigital), "PIN");
        this.setOutput(true, "Number");
        this.setTooltip(Blockly.Msg["SERVO_READ_DEGREES_TOOLTIP"]);
        this.setHelpUrl(Blockly.Msg["SERVO_READ_DEGREES_HELPURL"]);
        this.setStyle('servo_blocks');
    }
};