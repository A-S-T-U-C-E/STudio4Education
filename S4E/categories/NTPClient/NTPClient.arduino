/**
 * @license
 * Copyright 2012 Fred Lin
 * SPDX-License-Identifier: Apache-2.0
 */

/**
 * @fileoverview NTPClient blocks for Blockly.
 * @author scanet@libreduc.cc (SÃ©bastien CANET)
 */

'use strict';

goog.provide('Blockly.Arduino.NTPClient');

goog.require('Blockly.Arduino');

Blockly.Arduino['NTPCLIENT_DEFINE_UDP'] = function(block) {
    Blockly.Arduino.includes_['includes_ntpcliend'] = '#include <NTPClient.h>';
    Blockly.Arduino.includes_['includes_wifiudp'] = '#include <WiFiUdp.h>';
    Blockly.Arduino.definitions_['definition_wifiudp'] = 'WiFiUDP ntpUDP;';
    return '';
};

Blockly.Arduino['NTPCLIENT_DEFINE_NTPCLIENT'] = function(block) {
    let instanceName = block.getFieldValue('NTP_INSTANCE_NAME');
    Blockly.Arduino.definitions_['definition_ntpclient'] = 'NTPClient ' + instanceName + '(ntpUDP);';
    return '';
};

Blockly.Arduino['NTPCLIENT_BEGIN'] = function(block) {
    let instanceName = block.getFieldValue('NTP_INSTANCE_NAME');
    let code = instanceName + '.begin();\n';
    return code;
};

Blockly.Arduino['NTPCLIENT_UPDATE'] = function(block) {
    let instanceName = block.getFieldValue('NTP_INSTANCE_NAME');
    let code = instanceName + '.update();\n';
    return code;
};

Blockly.Arduino['NTPCLIENT_FORCEUPDATE'] = function(block) {
    let instanceName = block.getFieldValue('NTP_INSTANCE_NAME');
    let code = instanceName + '.forceUpdate();\n';
    return code;
};

Blockly.Arduino['NTPCLIENT_GET_EPOCH_TIME'] = function(block) {
    let instanceName = block.getFieldValue('NTP_INSTANCE_NAME');
    let code = instanceName + '.getEpochTime()';
    return [code, Blockly.Arduino.ORDER_ATOMIC];
};

Blockly.Arduino['NTPCLIENT_GET_FORMATTED_TIME'] = function(block) {
    let instanceName = block.getFieldValue('NTP_INSTANCE_NAME');
    let code = instanceName + '.getFormattedTime()';
    return [code, Blockly.Arduino.ORDER_ATOMIC];
};