{"version":3,"sources":["compile.ts","cpu-performance.ts","../../src/cpu/cpu.ts","../../src/cpu/instruction.ts","../../src/cpu/interrupt.ts","../../src/peripherals/gpio.ts","../../src/peripherals/timer.ts","../../src/peripherals/usart.ts","../../src/peripherals/eeprom.ts","../../src/peripherals/twi.ts","../../src/index.ts","intelhex.ts","task-scheduler.ts","execute.ts","format-time.ts","utils/editor-history.util.ts","index.ts","../../node_modules/parcel-bundler/src/builtins/bundle-url.js","../../node_modules/parcel-bundler/src/builtins/css-loader.js","../../node_modules/parcel-bundler/src/builtins/hmr-runtime.js"],"names":["bundleURL","getBundleURLCached","getBundleURL","Error","err","matches","stack","match","getBaseURL","url","replace","exports","bundle","require","updateLink","link","newLink","cloneNode","onload","remove","href","split","Date","now","parentNode","insertBefore","nextSibling","cssTimeout","reloadCSS","setTimeout","links","document","querySelectorAll","i","length","module","OVERLAY_ID","OldModule","Module","moduleName","call","hot","data","hotData","_acceptCallbacks","_disposeCallbacks","accept","fn","push","dispose","checkedAssets","assetsToAccept","parent","isParcelRequire","WebSocket","hostname","location","protocol","ws","onmessage","event","JSON","parse","type","handled","assets","forEach","asset","isNew","didAccept","hmrAcceptCheck","global","parcelRequire","id","every","generated","js","console","clear","hmrApply","v","hmrAcceptRun","reload","close","onclose","log","removeErrorOverlay","error","message","overlay","createErrorOverlay","body","appendChild","getElementById","createElement","stackTrace","innerText","innerHTML","getParents","modules","parents","k","d","dep","Array","isArray","concat","Function","deps","cached","cache","some","cb"],"mappings":"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","file":"src.77de5100.js","sourceRoot":"../src","sourcesContent":["const url = 'https://hexi.wokwi.com';\n\nexport interface HexiResult {\n  stdout: string;\n  stderr: string;\n  hex: string;\n}\n\nexport async function buildHex(source: string) {\n  const resp = await fetch(url + '/build', {\n    method: 'POST',\n    mode: 'cors',\n    cache: 'no-cache',\n    headers: {\n      'Content-Type': 'application/json',\n    },\n    body: JSON.stringify({ sketch: source }),\n  });\n  return (await resp.json()) as HexiResult;\n}\n","import { ICPU } from 'avr8js';\n\nexport class CPUPerformance {\n  private prevTime = 0;\n  private prevCycles = 0;\n  private samples = new Float32Array(64);\n  private sampleIndex = 0;\n\n  constructor(private cpu: ICPU, private MHZ: number) {}\n\n  reset() {\n    this.prevTime = 0;\n    this.prevCycles = 0;\n    this.sampleIndex = 0;\n  }\n\n  update() {\n    if (this.prevTime) {\n      const delta = performance.now() - this.prevTime;\n      const deltaCycles = this.cpu.cycles - this.prevCycles;\n      const deltaCpuMillis = 1000 * (deltaCycles / this.MHZ);\n      const factor = deltaCpuMillis / delta;\n      if (!this.sampleIndex) {\n        this.samples.fill(factor);\n      }\n      this.samples[this.sampleIndex++ % this.samples.length] = factor;\n    }\n    this.prevCycles = this.cpu.cycles;\n    this.prevTime = performance.now();\n    const avg = this.samples.reduce((x, y) => x + y) / this.samples.length;\n    return avg;\n  }\n}\n","/**\n * AVR 8 CPU data structures\n * Part of AVR8js\n *\n * Copyright (C) 2019, Uri Shaked\n */\n\nimport { u32, u16, u8 } from '../types';\n\nconst registerSpace = 0x100;\n\n// eslint-disable-next-line @typescript-eslint/interface-name-prefix\nexport interface ICPU {\n  readonly data: Uint8Array;\n  readonly dataView: DataView;\n  readonly progMem: Uint16Array;\n  readonly progBytes: Uint8Array;\n\n  /**\n   * Whether the program counter (PC) can address 22 bits (the default is 16)\n   */\n  readonly pc22Bits: boolean;\n\n  /**\n   * Program counter\n   */\n  pc: u32;\n\n  /**\n   * Clock cycle counter\n   */\n  cycles: number;\n\n  readData(addr: u16): u8;\n  writeData(addr: u16, value: u8): void;\n}\n\nexport type CPUMemoryHook = (value: u8, oldValue: u8, addr: u16) => boolean | void;\nexport interface CPUMemoryHooks {\n  [key: number]: CPUMemoryHook;\n}\n\nexport type CPUMemoryReadHook = (addr: u16) => u8;\nexport interface CPUMemoryReadHooks {\n  [key: number]: CPUMemoryReadHook;\n}\n\nexport class CPU implements ICPU {\n  readonly data: Uint8Array = new Uint8Array(this.sramBytes + registerSpace);\n  readonly data16 = new Uint16Array(this.data.buffer);\n  readonly dataView = new DataView(this.data.buffer);\n  readonly progBytes = new Uint8Array(this.progMem.buffer);\n  readonly readHooks: CPUMemoryReadHooks = [];\n  readonly writeHooks: CPUMemoryHooks = [];\n  readonly pc22Bits = this.progBytes.length > 0x20000;\n\n  // This lets the Timer Compare output override GPIO pins:\n  readonly gpioTimerHooks: CPUMemoryHooks = [];\n\n  pc = 0;\n  cycles = 0;\n\n  constructor(public progMem: Uint16Array, private sramBytes = 8192) {\n    this.reset();\n  }\n\n  reset() {\n    this.data.fill(0);\n    this.SP = this.data.length - 1;\n  }\n\n  readData(addr: number) {\n    if (addr >= 32 && this.readHooks[addr]) {\n      return this.readHooks[addr](addr);\n    }\n    return this.data[addr];\n  }\n\n  writeData(addr: number, value: number) {\n    const hook = this.writeHooks[addr];\n    if (hook) {\n      if (hook(value, this.data[addr], addr)) {\n        return;\n      }\n    }\n    this.data[addr] = value;\n  }\n\n  get SP() {\n    return this.dataView.getUint16(93, true);\n  }\n\n  set SP(value: number) {\n    this.dataView.setUint16(93, value, true);\n  }\n\n  get SREG() {\n    return this.data[95];\n  }\n\n  get interruptsEnabled() {\n    return this.SREG & 0x80 ? true : false;\n  }\n}\n","/**\n * AVR-8 Instruction Simulation\n * Part of AVR8js\n *\n * Reference: http://ww1.microchip.com/downloads/en/devicedoc/atmel-0856-avr-instruction-set-manual.pdf\n *\n * Instruction timing is currently based on ATmega328p (see the Instruction Set Summary at the end of\n * the datasheet)\n *\n * Copyright (C) 2019, 2020 Uri Shaked\n */\n\nimport { ICPU } from './cpu';\nimport { u16 } from '../types';\n\nfunction isTwoWordInstruction(opcode: u16) {\n  return (\n    /* LDS */\n    (opcode & 0xfe0f) === 0x9000 ||\n    /* STS */\n    (opcode & 0xfe0f) === 0x9200 ||\n    /* CALL */\n    (opcode & 0xfe0e) === 0x940e ||\n    /* JMP */\n    (opcode & 0xfe0e) === 0x940c\n  );\n}\n\nexport function avrInstruction(cpu: ICPU) {\n  const opcode = cpu.progMem[cpu.pc];\n\n  if ((opcode & 0xfc00) === 0x1c00) {\n    /* ADC, 0001 11rd dddd rrrr */\n    const d = cpu.data[(opcode & 0x1f0) >> 4];\n    const r = cpu.data[(opcode & 0xf) | ((opcode & 0x200) >> 5)];\n    const sum = d + r + (cpu.data[95] & 1);\n    const R = sum & 255;\n    cpu.data[(opcode & 0x1f0) >> 4] = R;\n    let sreg = cpu.data[95] & 0xc0;\n    sreg |= R ? 0 : 2;\n    sreg |= 128 & R ? 4 : 0;\n    sreg |= (R ^ r) & (d ^ R) & 128 ? 8 : 0;\n    sreg |= ((sreg >> 2) & 1) ^ ((sreg >> 3) & 1) ? 0x10 : 0;\n    sreg |= sum & 256 ? 1 : 0;\n    sreg |= 1 & ((d & r) | (r & ~R) | (~R & d)) ? 0x20 : 0;\n    cpu.data[95] = sreg;\n  } else if ((opcode & 0xfc00) === 0xc00) {\n    /* ADD, 0000 11rd dddd rrrr */\n    const d = cpu.data[(opcode & 0x1f0) >> 4];\n    const r = cpu.data[(opcode & 0xf) | ((opcode & 0x200) >> 5)];\n    const R = (d + r) & 255;\n    cpu.data[(opcode & 0x1f0) >> 4] = R;\n    let sreg = cpu.data[95] & 0xc0;\n    sreg |= R ? 0 : 2;\n    sreg |= 128 & R ? 4 : 0;\n    sreg |= (R ^ r) & (R ^ d) & 128 ? 8 : 0;\n    sreg |= ((sreg >> 2) & 1) ^ ((sreg >> 3) & 1) ? 0x10 : 0;\n    sreg |= (d + r) & 256 ? 1 : 0;\n    sreg |= 1 & ((d & r) | (r & ~R) | (~R & d)) ? 0x20 : 0;\n    cpu.data[95] = sreg;\n  } else if ((opcode & 0xff00) === 0x9600) {\n    /* ADIW, 1001 0110 KKdd KKKK */\n    const addr = 2 * ((opcode & 0x30) >> 4) + 24;\n    const value = cpu.dataView.getUint16(addr, true);\n    const R = (value + ((opcode & 0xf) | ((opcode & 0xc0) >> 2))) & 0xffff;\n    cpu.dataView.setUint16(addr, R, true);\n    let sreg = cpu.data[95] & 0xe0;\n    sreg |= R ? 0 : 2;\n    sreg |= 0x8000 & R ? 4 : 0;\n    sreg |= ~value & R & 0x8000 ? 8 : 0;\n    sreg |= ((sreg >> 2) & 1) ^ ((sreg >> 3) & 1) ? 0x10 : 0;\n    sreg |= ~R & value & 0x8000 ? 1 : 0;\n    cpu.data[95] = sreg;\n    cpu.cycles++;\n  } else if ((opcode & 0xfc00) === 0x2000) {\n    /* AND, 0010 00rd dddd rrrr */\n    const R = cpu.data[(opcode & 0x1f0) >> 4] & cpu.data[(opcode & 0xf) | ((opcode & 0x200) >> 5)];\n    cpu.data[(opcode & 0x1f0) >> 4] = R;\n    let sreg = cpu.data[95] & 0xe1;\n    sreg |= R ? 0 : 2;\n    sreg |= 128 & R ? 4 : 0;\n    sreg |= ((sreg >> 2) & 1) ^ ((sreg >> 3) & 1) ? 0x10 : 0;\n    cpu.data[95] = sreg;\n  } else if ((opcode & 0xf000) === 0x7000) {\n    /* ANDI, 0111 KKKK dddd KKKK */\n    const R = cpu.data[((opcode & 0xf0) >> 4) + 16] & ((opcode & 0xf) | ((opcode & 0xf00) >> 4));\n    cpu.data[((opcode & 0xf0) >> 4) + 16] = R;\n    let sreg = cpu.data[95] & 0xe1;\n    sreg |= R ? 0 : 2;\n    sreg |= 128 & R ? 4 : 0;\n    sreg |= ((sreg >> 2) & 1) ^ ((sreg >> 3) & 1) ? 0x10 : 0;\n    cpu.data[95] = sreg;\n  } else if ((opcode & 0xfe0f) === 0x9405) {\n    /* ASR, 1001 010d dddd 0101 */\n    const value = cpu.data[(opcode & 0x1f0) >> 4];\n    const R = (value >>> 1) | (128 & value);\n    cpu.data[(opcode & 0x1f0) >> 4] = R;\n    let sreg = cpu.data[95] & 0xe0;\n    sreg |= R ? 0 : 2;\n    sreg |= 128 & R ? 4 : 0;\n    sreg |= value & 1;\n    sreg |= ((sreg >> 2) & 1) ^ (sreg & 1) ? 8 : 0;\n    sreg |= ((sreg >> 2) & 1) ^ ((sreg >> 3) & 1) ? 0x10 : 0;\n    cpu.data[95] = sreg;\n  } else if ((opcode & 0xff8f) === 0x9488) {\n    /* BCLR, 1001 0100 1sss 1000 */\n    cpu.data[95] &= ~(1 << ((opcode & 0x70) >> 4));\n  } else if ((opcode & 0xfe08) === 0xf800) {\n    /* BLD, 1111 100d dddd 0bbb */\n    const b = opcode & 7;\n    const d = (opcode & 0x1f0) >> 4;\n    cpu.data[d] = (~(1 << b) & cpu.data[d]) | (((cpu.data[95] >> 6) & 1) << b);\n  } else if ((opcode & 0xfc00) === 0xf400) {\n    /* BRBC, 1111 01kk kkkk ksss */\n    if (!(cpu.data[95] & (1 << (opcode & 7)))) {\n      cpu.pc = cpu.pc + (((opcode & 0x1f8) >> 3) - (opcode & 0x200 ? 0x40 : 0));\n      cpu.cycles++;\n    }\n  } else if ((opcode & 0xfc00) === 0xf000) {\n    /* BRBS, 1111 00kk kkkk ksss */\n    if (cpu.data[95] & (1 << (opcode & 7))) {\n      cpu.pc = cpu.pc + (((opcode & 0x1f8) >> 3) - (opcode & 0x200 ? 0x40 : 0));\n      cpu.cycles++;\n    }\n  } else if ((opcode & 0xff8f) === 0x9408) {\n    /* BSET, 1001 0100 0sss 1000 */\n    cpu.data[95] |= 1 << ((opcode & 0x70) >> 4);\n  } else if ((opcode & 0xfe08) === 0xfa00) {\n    /* BST, 1111 101d dddd 0bbb */\n    const d = cpu.data[(opcode & 0x1f0) >> 4];\n    const b = opcode & 7;\n    cpu.data[95] = (cpu.data[95] & 0xbf) | ((d >> b) & 1 ? 0x40 : 0);\n  } else if ((opcode & 0xfe0e) === 0x940e) {\n    /* CALL, 1001 010k kkkk 111k kkkk kkkk kkkk kkkk */\n    const k = cpu.progMem[cpu.pc + 1] | ((opcode & 1) << 16) | ((opcode & 0x1f0) << 13);\n    const ret = cpu.pc + 2;\n    const sp = cpu.dataView.getUint16(93, true);\n    const { pc22Bits } = cpu;\n    cpu.data[sp] = 255 & ret;\n    cpu.data[sp - 1] = (ret >> 8) & 255;\n    if (pc22Bits) {\n      cpu.data[sp - 2] = (ret >> 16) & 255;\n    }\n    cpu.dataView.setUint16(93, sp - (pc22Bits ? 3 : 2), true);\n    cpu.pc = k - 1;\n    cpu.cycles += pc22Bits ? 4 : 3;\n  } else if ((opcode & 0xff00) === 0x9800) {\n    /* CBI, 1001 1000 AAAA Abbb */\n    const A = opcode & 0xf8;\n    const b = opcode & 7;\n    const R = cpu.readData((A >> 3) + 32);\n    cpu.writeData((A >> 3) + 32, R & ~(1 << b));\n  } else if ((opcode & 0xfe0f) === 0x9400) {\n    /* COM, 1001 010d dddd 0000 */\n    const d = (opcode & 0x1f0) >> 4;\n    const R = 255 - cpu.data[d];\n    cpu.data[d] = R;\n    let sreg = (cpu.data[95] & 0xe1) | 1;\n    sreg |= R ? 0 : 2;\n    sreg |= 128 & R ? 4 : 0;\n    sreg |= ((sreg >> 2) & 1) ^ ((sreg >> 3) & 1) ? 0x10 : 0;\n    cpu.data[95] = sreg;\n  } else if ((opcode & 0xfc00) === 0x1400) {\n    /* CP, 0001 01rd dddd rrrr */\n    const val1 = cpu.data[(opcode & 0x1f0) >> 4];\n    const val2 = cpu.data[(opcode & 0xf) | ((opcode & 0x200) >> 5)];\n    const R = val1 - val2;\n    let sreg = cpu.data[95] & 0xc0;\n    sreg |= R ? 0 : 2;\n    sreg |= 128 & R ? 4 : 0;\n    sreg |= 0 !== ((val1 ^ val2) & (val1 ^ R) & 128) ? 8 : 0;\n    sreg |= ((sreg >> 2) & 1) ^ ((sreg >> 3) & 1) ? 0x10 : 0;\n    sreg |= val2 > val1 ? 1 : 0;\n    sreg |= 1 & ((~val1 & val2) | (val2 & R) | (R & ~val1)) ? 0x20 : 0;\n    cpu.data[95] = sreg;\n  } else if ((opcode & 0xfc00) === 0x400) {\n    /* CPC, 0000 01rd dddd rrrr */\n    const arg1 = cpu.data[(opcode & 0x1f0) >> 4];\n    const arg2 = cpu.data[(opcode & 0xf) | ((opcode & 0x200) >> 5)];\n    let sreg = cpu.data[95];\n    const r = arg1 - arg2 - (sreg & 1);\n    sreg = (sreg & 0xc0) | (!r && (sreg >> 1) & 1 ? 2 : 0) | (arg2 + (sreg & 1) > arg1 ? 1 : 0);\n    sreg |= 128 & r ? 4 : 0;\n    sreg |= (arg1 ^ arg2) & (arg1 ^ r) & 128 ? 8 : 0;\n    sreg |= ((sreg >> 2) & 1) ^ ((sreg >> 3) & 1) ? 0x10 : 0;\n    sreg |= 1 & ((~arg1 & arg2) | (arg2 & r) | (r & ~arg1)) ? 0x20 : 0;\n    cpu.data[95] = sreg;\n  } else if ((opcode & 0xf000) === 0x3000) {\n    /* CPI, 0011 KKKK dddd KKKK */\n    const arg1 = cpu.data[((opcode & 0xf0) >> 4) + 16];\n    const arg2 = (opcode & 0xf) | ((opcode & 0xf00) >> 4);\n    const r = arg1 - arg2;\n    let sreg = cpu.data[95] & 0xc0;\n    sreg |= r ? 0 : 2;\n    sreg |= 128 & r ? 4 : 0;\n    sreg |= (arg1 ^ arg2) & (arg1 ^ r) & 128 ? 8 : 0;\n    sreg |= ((sreg >> 2) & 1) ^ ((sreg >> 3) & 1) ? 0x10 : 0;\n    sreg |= arg2 > arg1 ? 1 : 0;\n    sreg |= 1 & ((~arg1 & arg2) | (arg2 & r) | (r & ~arg1)) ? 0x20 : 0;\n    cpu.data[95] = sreg;\n  } else if ((opcode & 0xfc00) === 0x1000) {\n    /* CPSE, 0001 00rd dddd rrrr */\n    if (cpu.data[(opcode & 0x1f0) >> 4] === cpu.data[(opcode & 0xf) | ((opcode & 0x200) >> 5)]) {\n      const nextOpcode = cpu.progMem[cpu.pc + 1];\n      const skipSize = isTwoWordInstruction(nextOpcode) ? 2 : 1;\n      cpu.pc += skipSize;\n      cpu.cycles += skipSize;\n    }\n  } else if ((opcode & 0xfe0f) === 0x940a) {\n    /* DEC, 1001 010d dddd 1010 */\n    const value = cpu.data[(opcode & 0x1f0) >> 4];\n    const R = value - 1;\n    cpu.data[(opcode & 0x1f0) >> 4] = R;\n    let sreg = cpu.data[95] & 0xe1;\n    sreg |= R ? 0 : 2;\n    sreg |= 128 & R ? 4 : 0;\n    sreg |= 128 === value ? 8 : 0;\n    sreg |= ((sreg >> 2) & 1) ^ ((sreg >> 3) & 1) ? 0x10 : 0;\n    cpu.data[95] = sreg;\n  } else if (opcode === 0x9519) {\n    /* EICALL, 1001 0101 0001 1001 */\n    const retAddr = cpu.pc + 1;\n    const sp = cpu.dataView.getUint16(93, true);\n    const eind = cpu.data[0x3c];\n    cpu.data[sp] = retAddr & 255;\n    cpu.data[sp - 1] = (retAddr >> 8) & 255;\n    cpu.dataView.setUint16(93, sp - 2, true);\n    cpu.pc = ((eind << 16) | cpu.dataView.getUint16(30, true)) - 1;\n    cpu.cycles += 3;\n  } else if (opcode === 0x9419) {\n    /* EIJMP, 1001 0100 0001 1001 */\n    const eind = cpu.data[0x3c];\n    cpu.pc = ((eind << 16) | cpu.dataView.getUint16(30, true)) - 1;\n    cpu.cycles++;\n  } else if (opcode === 0x95d8) {\n    /* ELPM, 1001 0101 1101 1000 */\n    const rampz = cpu.data[0x3b];\n    cpu.data[0] = cpu.progBytes[(rampz << 16) | cpu.dataView.getUint16(30, true)];\n    cpu.cycles += 2;\n  } else if ((opcode & 0xfe0f) === 0x9006) {\n    /* ELPM(REG), 1001 000d dddd 0110 */\n    const rampz = cpu.data[0x3b];\n    cpu.data[(opcode & 0x1f0) >> 4] =\n      cpu.progBytes[(rampz << 16) | cpu.dataView.getUint16(30, true)];\n    cpu.cycles += 2;\n  } else if ((opcode & 0xfe0f) === 0x9007) {\n    /* ELPM(INC), 1001 000d dddd 0111 */\n    const rampz = cpu.data[0x3b];\n    const i = cpu.dataView.getUint16(30, true);\n    cpu.data[(opcode & 0x1f0) >> 4] = cpu.progBytes[(rampz << 16) | i];\n    cpu.dataView.setUint16(30, i + 1, true);\n    if (i === 0xffff) {\n      cpu.data[0x3b] = (rampz + 1) % (cpu.progBytes.length >> 16);\n    }\n    cpu.cycles += 2;\n  } else if ((opcode & 0xfc00) === 0x2400) {\n    /* EOR, 0010 01rd dddd rrrr */\n    const R = cpu.data[(opcode & 0x1f0) >> 4] ^ cpu.data[(opcode & 0xf) | ((opcode & 0x200) >> 5)];\n    cpu.data[(opcode & 0x1f0) >> 4] = R;\n    let sreg = cpu.data[95] & 0xe1;\n    sreg |= R ? 0 : 2;\n    sreg |= 128 & R ? 4 : 0;\n    sreg |= ((sreg >> 2) & 1) ^ ((sreg >> 3) & 1) ? 0x10 : 0;\n    cpu.data[95] = sreg;\n  } else if ((opcode & 0xff88) === 0x308) {\n    /* FMUL, 0000 0011 0ddd 1rrr */\n    const v1 = cpu.data[((opcode & 0x70) >> 4) + 16];\n    const v2 = cpu.data[(opcode & 7) + 16];\n    const R = (v1 * v2) << 1;\n    cpu.dataView.setUint16(0, R, true);\n    cpu.data[95] = (cpu.data[95] & 0xfc) | (0xffff & R ? 0 : 2) | ((v1 * v2) & 0x8000 ? 1 : 0);\n    cpu.cycles++;\n  } else if ((opcode & 0xff88) === 0x380) {\n    /* FMULS, 0000 0011 1ddd 0rrr */\n    const v1 = cpu.dataView.getInt8(((opcode & 0x70) >> 4) + 16);\n    const v2 = cpu.dataView.getInt8((opcode & 7) + 16);\n    const R = (v1 * v2) << 1;\n    cpu.dataView.setInt16(0, R, true);\n    cpu.data[95] = (cpu.data[95] & 0xfc) | (0xffff & R ? 0 : 2) | ((v1 * v2) & 0x8000 ? 1 : 0);\n    cpu.cycles++;\n  } else if ((opcode & 0xff88) === 0x388) {\n    /* FMULSU, 0000 0011 1ddd 1rrr */\n    const v1 = cpu.dataView.getInt8(((opcode & 0x70) >> 4) + 16);\n    const v2 = cpu.data[(opcode & 7) + 16];\n    const R = (v1 * v2) << 1;\n    cpu.dataView.setInt16(0, R, true);\n    cpu.data[95] = (cpu.data[95] & 0xfc) | (0xffff & R ? 2 : 0) | ((v1 * v2) & 0x8000 ? 1 : 0);\n    cpu.cycles++;\n  } else if (opcode === 0x9509) {\n    /* ICALL, 1001 0101 0000 1001 */\n    const retAddr = cpu.pc + 1;\n    const sp = cpu.dataView.getUint16(93, true);\n    const { pc22Bits } = cpu;\n    cpu.data[sp] = retAddr & 255;\n    cpu.data[sp - 1] = (retAddr >> 8) & 255;\n    if (pc22Bits) {\n      cpu.data[sp - 2] = (retAddr >> 16) & 255;\n    }\n    cpu.dataView.setUint16(93, sp - (pc22Bits ? 3 : 2), true);\n    cpu.pc = cpu.dataView.getUint16(30, true) - 1;\n    cpu.cycles += pc22Bits ? 3 : 2;\n  } else if (opcode === 0x9409) {\n    /* IJMP, 1001 0100 0000 1001 */\n    cpu.pc = cpu.dataView.getUint16(30, true) - 1;\n    cpu.cycles++;\n  } else if ((opcode & 0xf800) === 0xb000) {\n    /* IN, 1011 0AAd dddd AAAA */\n    const i = cpu.readData(((opcode & 0xf) | ((opcode & 0x600) >> 5)) + 32);\n    cpu.data[(opcode & 0x1f0) >> 4] = i;\n  } else if ((opcode & 0xfe0f) === 0x9403) {\n    /* INC, 1001 010d dddd 0011 */\n    const d = cpu.data[(opcode & 0x1f0) >> 4];\n    const r = (d + 1) & 255;\n    cpu.data[(opcode & 0x1f0) >> 4] = r;\n    let sreg = cpu.data[95] & 0xe1;\n    sreg |= r ? 0 : 2;\n    sreg |= 128 & r ? 4 : 0;\n    sreg |= 127 === d ? 8 : 0;\n    sreg |= ((sreg >> 2) & 1) ^ ((sreg >> 3) & 1) ? 0x10 : 0;\n    cpu.data[95] = sreg;\n  } else if ((opcode & 0xfe0e) === 0x940c) {\n    /* JMP, 1001 010k kkkk 110k kkkk kkkk kkkk kkkk */\n    cpu.pc = (cpu.progMem[cpu.pc + 1] | ((opcode & 1) << 16) | ((opcode & 0x1f0) << 13)) - 1;\n    cpu.cycles += 2;\n  } else if ((opcode & 0xfe0f) === 0x9206) {\n    /* LAC, 1001 001r rrrr 0110 */\n    const r = (opcode & 0x1f0) >> 4;\n    const clear = cpu.data[r];\n    const value = cpu.readData(cpu.dataView.getUint16(30, true));\n    cpu.writeData(cpu.dataView.getUint16(30, true), value & (255 - clear));\n    cpu.data[r] = value;\n  } else if ((opcode & 0xfe0f) === 0x9205) {\n    /* LAS, 1001 001r rrrr 0101 */\n    const r = (opcode & 0x1f0) >> 4;\n    const set = cpu.data[r];\n    const value = cpu.readData(cpu.dataView.getUint16(30, true));\n    cpu.writeData(cpu.dataView.getUint16(30, true), value | set);\n    cpu.data[r] = value;\n  } else if ((opcode & 0xfe0f) === 0x9207) {\n    /* LAT, 1001 001r rrrr 0111 */\n    const r = cpu.data[(opcode & 0x1f0) >> 4];\n    const R = cpu.readData(cpu.dataView.getUint16(30, true));\n    cpu.writeData(cpu.dataView.getUint16(30, true), r ^ R);\n    cpu.data[(opcode & 0x1f0) >> 4] = R;\n  } else if ((opcode & 0xf000) === 0xe000) {\n    /* LDI, 1110 KKKK dddd KKKK */\n    cpu.data[((opcode & 0xf0) >> 4) + 16] = (opcode & 0xf) | ((opcode & 0xf00) >> 4);\n  } else if ((opcode & 0xfe0f) === 0x9000) {\n    /* LDS, 1001 000d dddd 0000 kkkk kkkk kkkk kkkk */\n    cpu.cycles++;\n    const value = cpu.readData(cpu.progMem[cpu.pc + 1]);\n    cpu.data[(opcode & 0x1f0) >> 4] = value;\n    cpu.pc++;\n  } else if ((opcode & 0xfe0f) === 0x900c) {\n    /* LDX, 1001 000d dddd 1100 */\n    cpu.cycles++;\n    cpu.data[(opcode & 0x1f0) >> 4] = cpu.readData(cpu.dataView.getUint16(26, true));\n  } else if ((opcode & 0xfe0f) === 0x900d) {\n    /* LDX(INC), 1001 000d dddd 1101 */\n    const x = cpu.dataView.getUint16(26, true);\n    cpu.cycles++;\n    cpu.data[(opcode & 0x1f0) >> 4] = cpu.readData(x);\n    cpu.dataView.setUint16(26, x + 1, true);\n  } else if ((opcode & 0xfe0f) === 0x900e) {\n    /* LDX(DEC), 1001 000d dddd 1110 */\n    const x = cpu.dataView.getUint16(26, true) - 1;\n    cpu.dataView.setUint16(26, x, true);\n    cpu.cycles++;\n    cpu.data[(opcode & 0x1f0) >> 4] = cpu.readData(x);\n  } else if ((opcode & 0xfe0f) === 0x8008) {\n    /* LDY, 1000 000d dddd 1000 */\n    cpu.cycles++;\n    cpu.data[(opcode & 0x1f0) >> 4] = cpu.readData(cpu.dataView.getUint16(28, true));\n  } else if ((opcode & 0xfe0f) === 0x9009) {\n    /* LDY(INC), 1001 000d dddd 1001 */\n    const y = cpu.dataView.getUint16(28, true);\n    cpu.cycles++;\n    cpu.data[(opcode & 0x1f0) >> 4] = cpu.readData(y);\n    cpu.dataView.setUint16(28, y + 1, true);\n  } else if ((opcode & 0xfe0f) === 0x900a) {\n    /* LDY(DEC), 1001 000d dddd 1010 */\n    const y = cpu.dataView.getUint16(28, true) - 1;\n    cpu.dataView.setUint16(28, y, true);\n    cpu.cycles++;\n    cpu.data[(opcode & 0x1f0) >> 4] = cpu.readData(y);\n  } else if (\n    (opcode & 0xd208) === 0x8008 &&\n    (opcode & 7) | ((opcode & 0xc00) >> 7) | ((opcode & 0x2000) >> 8)\n  ) {\n    /* LDDY, 10q0 qq0d dddd 1qqq */\n    cpu.cycles++;\n    cpu.data[(opcode & 0x1f0) >> 4] = cpu.readData(\n      cpu.dataView.getUint16(28, true) +\n        ((opcode & 7) | ((opcode & 0xc00) >> 7) | ((opcode & 0x2000) >> 8))\n    );\n  } else if ((opcode & 0xfe0f) === 0x8000) {\n    /* LDZ, 1000 000d dddd 0000 */\n    cpu.cycles++;\n    cpu.data[(opcode & 0x1f0) >> 4] = cpu.readData(cpu.dataView.getUint16(30, true));\n  } else if ((opcode & 0xfe0f) === 0x9001) {\n    /* LDZ(INC), 1001 000d dddd 0001 */\n    const z = cpu.dataView.getUint16(30, true);\n    cpu.cycles++;\n    cpu.data[(opcode & 0x1f0) >> 4] = cpu.readData(z);\n    cpu.dataView.setUint16(30, z + 1, true);\n  } else if ((opcode & 0xfe0f) === 0x9002) {\n    /* LDZ(DEC), 1001 000d dddd 0010 */\n    const z = cpu.dataView.getUint16(30, true) - 1;\n    cpu.dataView.setUint16(30, z, true);\n    cpu.cycles++;\n    cpu.data[(opcode & 0x1f0) >> 4] = cpu.readData(z);\n  } else if (\n    (opcode & 0xd208) === 0x8000 &&\n    (opcode & 7) | ((opcode & 0xc00) >> 7) | ((opcode & 0x2000) >> 8)\n  ) {\n    /* LDDZ, 10q0 qq0d dddd 0qqq */\n    cpu.cycles++;\n    cpu.data[(opcode & 0x1f0) >> 4] = cpu.readData(\n      cpu.dataView.getUint16(30, true) +\n        ((opcode & 7) | ((opcode & 0xc00) >> 7) | ((opcode & 0x2000) >> 8))\n    );\n  } else if (opcode === 0x95c8) {\n    /* LPM, 1001 0101 1100 1000 */\n    cpu.data[0] = cpu.progBytes[cpu.dataView.getUint16(30, true)];\n    cpu.cycles += 2;\n  } else if ((opcode & 0xfe0f) === 0x9004) {\n    /* LPM(REG), 1001 000d dddd 0100 */\n    cpu.data[(opcode & 0x1f0) >> 4] = cpu.progBytes[cpu.dataView.getUint16(30, true)];\n    cpu.cycles += 2;\n  } else if ((opcode & 0xfe0f) === 0x9005) {\n    /* LPM(INC), 1001 000d dddd 0101 */\n    const i = cpu.dataView.getUint16(30, true);\n    cpu.data[(opcode & 0x1f0) >> 4] = cpu.progBytes[i];\n    cpu.dataView.setUint16(30, i + 1, true);\n    cpu.cycles += 2;\n  } else if ((opcode & 0xfe0f) === 0x9406) {\n    /* LSR, 1001 010d dddd 0110 */\n    const value = cpu.data[(opcode & 0x1f0) >> 4];\n    const R = value >>> 1;\n    cpu.data[(opcode & 0x1f0) >> 4] = R;\n    let sreg = cpu.data[95] & 0xe0;\n    sreg |= R ? 0 : 2;\n    sreg |= value & 1;\n    sreg |= ((sreg >> 2) & 1) ^ (sreg & 1) ? 8 : 0;\n    sreg |= ((sreg >> 2) & 1) ^ ((sreg >> 3) & 1) ? 0x10 : 0;\n    cpu.data[95] = sreg;\n  } else if ((opcode & 0xfc00) === 0x2c00) {\n    /* MOV, 0010 11rd dddd rrrr */\n    cpu.data[(opcode & 0x1f0) >> 4] = cpu.data[(opcode & 0xf) | ((opcode & 0x200) >> 5)];\n  } else if ((opcode & 0xff00) === 0x100) {\n    /* MOVW, 0000 0001 dddd rrrr */\n    const r2 = 2 * (opcode & 0xf);\n    const d2 = 2 * ((opcode & 0xf0) >> 4);\n    cpu.data[d2] = cpu.data[r2];\n    cpu.data[d2 + 1] = cpu.data[r2 + 1];\n  } else if ((opcode & 0xfc00) === 0x9c00) {\n    /* MUL, 1001 11rd dddd rrrr */\n    const R = cpu.data[(opcode & 0x1f0) >> 4] * cpu.data[(opcode & 0xf) | ((opcode & 0x200) >> 5)];\n    cpu.dataView.setUint16(0, R, true);\n    cpu.data[95] = (cpu.data[95] & 0xfc) | (0xffff & R ? 0 : 2) | (0x8000 & R ? 1 : 0);\n    cpu.cycles++;\n  } else if ((opcode & 0xff00) === 0x200) {\n    /* MULS, 0000 0010 dddd rrrr */\n    const R =\n      cpu.dataView.getInt8(((opcode & 0xf0) >> 4) + 16) * cpu.dataView.getInt8((opcode & 0xf) + 16);\n    cpu.dataView.setInt16(0, R, true);\n    cpu.data[95] = (cpu.data[95] & 0xfc) | (0xffff & R ? 0 : 2) | (0x8000 & R ? 1 : 0);\n    cpu.cycles++;\n  } else if ((opcode & 0xff88) === 0x300) {\n    /* MULSU, 0000 0011 0ddd 0rrr */\n    const R = cpu.dataView.getInt8(((opcode & 0x70) >> 4) + 16) * cpu.data[(opcode & 7) + 16];\n    cpu.dataView.setInt16(0, R, true);\n    cpu.data[95] = (cpu.data[95] & 0xfc) | (0xffff & R ? 0 : 2) | (0x8000 & R ? 1 : 0);\n    cpu.cycles++;\n  } else if ((opcode & 0xfe0f) === 0x9401) {\n    /* NEG, 1001 010d dddd 0001 */\n    const d = (opcode & 0x1f0) >> 4;\n    const value = cpu.data[d];\n    const R = 0 - value;\n    cpu.data[d] = R;\n    let sreg = cpu.data[95] & 0xc0;\n    sreg |= R ? 0 : 2;\n    sreg |= 128 & R ? 4 : 0;\n    sreg |= 128 === R ? 8 : 0;\n    sreg |= ((sreg >> 2) & 1) ^ ((sreg >> 3) & 1) ? 0x10 : 0;\n    sreg |= R ? 1 : 0;\n    sreg |= 1 & (R | value) ? 0x20 : 0;\n    cpu.data[95] = sreg;\n  } else if (opcode === 0) {\n    /* NOP, 0000 0000 0000 0000 */\n    /* NOP */\n  } else if ((opcode & 0xfc00) === 0x2800) {\n    /* OR, 0010 10rd dddd rrrr */\n    const R = cpu.data[(opcode & 0x1f0) >> 4] | cpu.data[(opcode & 0xf) | ((opcode & 0x200) >> 5)];\n    cpu.data[(opcode & 0x1f0) >> 4] = R;\n    let sreg = cpu.data[95] & 0xe1;\n    sreg |= R ? 0 : 2;\n    sreg |= 128 & R ? 4 : 0;\n    sreg |= ((sreg >> 2) & 1) ^ ((sreg >> 3) & 1) ? 0x10 : 0;\n    cpu.data[95] = sreg;\n  } else if ((opcode & 0xf000) === 0x6000) {\n    /* SBR, 0110 KKKK dddd KKKK */\n    const R = cpu.data[((opcode & 0xf0) >> 4) + 16] | ((opcode & 0xf) | ((opcode & 0xf00) >> 4));\n    cpu.data[((opcode & 0xf0) >> 4) + 16] = R;\n    let sreg = cpu.data[95] & 0xe1;\n    sreg |= R ? 0 : 2;\n    sreg |= 128 & R ? 4 : 0;\n    sreg |= ((sreg >> 2) & 1) ^ ((sreg >> 3) & 1) ? 0x10 : 0;\n    cpu.data[95] = sreg;\n  } else if ((opcode & 0xf800) === 0xb800) {\n    /* OUT, 1011 1AAr rrrr AAAA */\n    cpu.writeData(((opcode & 0xf) | ((opcode & 0x600) >> 5)) + 32, cpu.data[(opcode & 0x1f0) >> 4]);\n  } else if ((opcode & 0xfe0f) === 0x900f) {\n    /* POP, 1001 000d dddd 1111 */\n    const value = cpu.dataView.getUint16(93, true) + 1;\n    cpu.dataView.setUint16(93, value, true);\n    cpu.data[(opcode & 0x1f0) >> 4] = cpu.data[value];\n    cpu.cycles++;\n  } else if ((opcode & 0xfe0f) === 0x920f) {\n    /* PUSH, 1001 001d dddd 1111 */\n    const value = cpu.dataView.getUint16(93, true);\n    cpu.data[value] = cpu.data[(opcode & 0x1f0) >> 4];\n    cpu.dataView.setUint16(93, value - 1, true);\n    cpu.cycles++;\n  } else if ((opcode & 0xf000) === 0xd000) {\n    /* RCALL, 1101 kkkk kkkk kkkk */\n    const k = (opcode & 0x7ff) - (opcode & 0x800 ? 0x800 : 0);\n    const retAddr = cpu.pc + 1;\n    const sp = cpu.dataView.getUint16(93, true);\n    const { pc22Bits } = cpu;\n    cpu.data[sp] = 255 & retAddr;\n    cpu.data[sp - 1] = (retAddr >> 8) & 255;\n    if (pc22Bits) {\n      cpu.data[sp - 2] = (retAddr >> 16) & 255;\n    }\n    cpu.dataView.setUint16(93, sp - (pc22Bits ? 3 : 2), true);\n    cpu.pc += k;\n    cpu.cycles += pc22Bits ? 3 : 2;\n  } else if (opcode === 0x9508) {\n    /* RET, 1001 0101 0000 1000 */\n    const { pc22Bits } = cpu;\n    const i = cpu.dataView.getUint16(93, true) + (pc22Bits ? 3 : 2);\n    cpu.dataView.setUint16(93, i, true);\n    cpu.pc = (cpu.data[i - 1] << 8) + cpu.data[i] - 1;\n    if (pc22Bits) {\n      cpu.pc |= cpu.data[i - 2] << 16;\n    }\n    cpu.cycles += pc22Bits ? 4 : 3;\n  } else if (opcode === 0x9518) {\n    /* RETI, 1001 0101 0001 1000 */\n    const { pc22Bits } = cpu;\n    const i = cpu.dataView.getUint16(93, true) + (pc22Bits ? 3 : 2);\n    cpu.dataView.setUint16(93, i, true);\n    cpu.pc = (cpu.data[i - 1] << 8) + cpu.data[i] - 1;\n    if (pc22Bits) {\n      cpu.pc |= cpu.data[i - 2] << 16;\n    }\n    cpu.cycles += pc22Bits ? 4 : 3;\n    cpu.data[95] |= 0x80; // Enable interrupts\n  } else if ((opcode & 0xf000) === 0xc000) {\n    /* RJMP, 1100 kkkk kkkk kkkk */\n    cpu.pc = cpu.pc + ((opcode & 0x7ff) - (opcode & 0x800 ? 0x800 : 0));\n    cpu.cycles++;\n  } else if ((opcode & 0xfe0f) === 0x9407) {\n    /* ROR, 1001 010d dddd 0111 */\n    const d = cpu.data[(opcode & 0x1f0) >> 4];\n    const r = (d >>> 1) | ((cpu.data[95] & 1) << 7);\n    cpu.data[(opcode & 0x1f0) >> 4] = r;\n    let sreg = cpu.data[95] & 0xe0;\n    sreg |= r ? 0 : 2;\n    sreg |= 128 & r ? 4 : 0;\n    sreg |= 1 & d ? 1 : 0;\n    sreg |= ((sreg >> 2) & 1) ^ (sreg & 1) ? 8 : 0;\n    sreg |= ((sreg >> 2) & 1) ^ ((sreg >> 3) & 1) ? 0x10 : 0;\n    cpu.data[95] = sreg;\n  } else if ((opcode & 0xfc00) === 0x800) {\n    /* SBC, 0000 10rd dddd rrrr */\n    const val1 = cpu.data[(opcode & 0x1f0) >> 4];\n    const val2 = cpu.data[(opcode & 0xf) | ((opcode & 0x200) >> 5)];\n    let sreg = cpu.data[95];\n    const R = val1 - val2 - (sreg & 1);\n    cpu.data[(opcode & 0x1f0) >> 4] = R;\n    sreg = (sreg & 0xc0) | (!R && (sreg >> 1) & 1 ? 2 : 0) | (val2 + (sreg & 1) > val1 ? 1 : 0);\n    sreg |= 128 & R ? 4 : 0;\n    sreg |= (val1 ^ val2) & (val1 ^ R) & 128 ? 8 : 0;\n    sreg |= ((sreg >> 2) & 1) ^ ((sreg >> 3) & 1) ? 0x10 : 0;\n    sreg |= 1 & ((~val1 & val2) | (val2 & R) | (R & ~val1)) ? 0x20 : 0;\n    cpu.data[95] = sreg;\n  } else if ((opcode & 0xf000) === 0x4000) {\n    /* SBCI, 0100 KKKK dddd KKKK */\n    const val1 = cpu.data[((opcode & 0xf0) >> 4) + 16];\n    const val2 = (opcode & 0xf) | ((opcode & 0xf00) >> 4);\n    let sreg = cpu.data[95];\n    const R = val1 - val2 - (sreg & 1);\n    cpu.data[((opcode & 0xf0) >> 4) + 16] = R;\n    sreg = (sreg & 0xc0) | (!R && (sreg >> 1) & 1 ? 2 : 0) | (val2 + (sreg & 1) > val1 ? 1 : 0);\n    sreg |= 128 & R ? 4 : 0;\n    sreg |= (val1 ^ val2) & (val1 ^ R) & 128 ? 8 : 0;\n    sreg |= ((sreg >> 2) & 1) ^ ((sreg >> 3) & 1) ? 0x10 : 0;\n    sreg |= 1 & ((~val1 & val2) | (val2 & R) | (R & ~val1)) ? 0x20 : 0;\n    cpu.data[95] = sreg;\n  } else if ((opcode & 0xff00) === 0x9a00) {\n    /* SBI, 1001 1010 AAAA Abbb */\n    const target = ((opcode & 0xf8) >> 3) + 32;\n    cpu.writeData(target, cpu.readData(target) | (1 << (opcode & 7)));\n    cpu.cycles++;\n  } else if ((opcode & 0xff00) === 0x9900) {\n    /* SBIC, 1001 1001 AAAA Abbb */\n    const value = cpu.readData(((opcode & 0xf8) >> 3) + 32);\n    if (!(value & (1 << (opcode & 7)))) {\n      const nextOpcode = cpu.progMem[cpu.pc + 1];\n      const skipSize = isTwoWordInstruction(nextOpcode) ? 2 : 1;\n      cpu.cycles += skipSize;\n      cpu.pc += skipSize;\n    }\n  } else if ((opcode & 0xff00) === 0x9b00) {\n    /* SBIS, 1001 1011 AAAA Abbb */\n    const value = cpu.readData(((opcode & 0xf8) >> 3) + 32);\n    if (value & (1 << (opcode & 7))) {\n      const nextOpcode = cpu.progMem[cpu.pc + 1];\n      const skipSize = isTwoWordInstruction(nextOpcode) ? 2 : 1;\n      cpu.cycles += skipSize;\n      cpu.pc += skipSize;\n    }\n  } else if ((opcode & 0xff00) === 0x9700) {\n    /* SBIW, 1001 0111 KKdd KKKK */\n    const i = 2 * ((opcode & 0x30) >> 4) + 24;\n    const a = cpu.dataView.getUint16(i, true);\n    const l = (opcode & 0xf) | ((opcode & 0xc0) >> 2);\n    const R = a - l;\n    cpu.dataView.setUint16(i, R, true);\n    let sreg = cpu.data[95] & 0xc0;\n    sreg |= R ? 0 : 2;\n    sreg |= 0x8000 & R ? 4 : 0;\n    sreg |= a & ~R & 0x8000 ? 8 : 0;\n    sreg |= ((sreg >> 2) & 1) ^ ((sreg >> 3) & 1) ? 0x10 : 0;\n    sreg |= l > a ? 1 : 0;\n    sreg |= 1 & ((~a & l) | (l & R) | (R & ~a)) ? 0x20 : 0;\n    cpu.data[95] = sreg;\n    cpu.cycles++;\n  } else if ((opcode & 0xfe08) === 0xfc00) {\n    /* SBRC, 1111 110r rrrr 0bbb */\n    if (!(cpu.data[(opcode & 0x1f0) >> 4] & (1 << (opcode & 7)))) {\n      const nextOpcode = cpu.progMem[cpu.pc + 1];\n      const skipSize = isTwoWordInstruction(nextOpcode) ? 2 : 1;\n      cpu.cycles += skipSize;\n      cpu.pc += skipSize;\n    }\n  } else if ((opcode & 0xfe08) === 0xfe00) {\n    /* SBRS, 1111 111r rrrr 0bbb */\n    if (cpu.data[(opcode & 0x1f0) >> 4] & (1 << (opcode & 7))) {\n      const nextOpcode = cpu.progMem[cpu.pc + 1];\n      const skipSize = isTwoWordInstruction(nextOpcode) ? 2 : 1;\n      cpu.cycles += skipSize;\n      cpu.pc += skipSize;\n    }\n  } else if (opcode === 0x9588) {\n    /* SLEEP, 1001 0101 1000 1000 */\n    /* not implemented */\n  } else if (opcode === 0x95e8) {\n    /* SPM, 1001 0101 1110 1000 */\n    /* not implemented */\n  } else if (opcode === 0x95f8) {\n    /* SPM(INC), 1001 0101 1111 1000 */\n    /* not implemented */\n  } else if ((opcode & 0xfe0f) === 0x9200) {\n    /* STS, 1001 001d dddd 0000 kkkk kkkk kkkk kkkk */\n    const value = cpu.data[(opcode & 0x1f0) >> 4];\n    const addr = cpu.progMem[cpu.pc + 1];\n    cpu.writeData(addr, value);\n    cpu.pc++;\n    cpu.cycles++;\n  } else if ((opcode & 0xfe0f) === 0x920c) {\n    /* STX, 1001 001r rrrr 1100 */\n    cpu.writeData(cpu.dataView.getUint16(26, true), cpu.data[(opcode & 0x1f0) >> 4]);\n    cpu.cycles++;\n  } else if ((opcode & 0xfe0f) === 0x920d) {\n    /* STX(INC), 1001 001r rrrr 1101 */\n    const x = cpu.dataView.getUint16(26, true);\n    cpu.writeData(x, cpu.data[(opcode & 0x1f0) >> 4]);\n    cpu.dataView.setUint16(26, x + 1, true);\n    cpu.cycles++;\n  } else if ((opcode & 0xfe0f) === 0x920e) {\n    /* STX(DEC), 1001 001r rrrr 1110 */\n    const i = cpu.data[(opcode & 0x1f0) >> 4];\n    const x = cpu.dataView.getUint16(26, true) - 1;\n    cpu.dataView.setUint16(26, x, true);\n    cpu.writeData(x, i);\n    cpu.cycles++;\n  } else if ((opcode & 0xfe0f) === 0x8208) {\n    /* STY, 1000 001r rrrr 1000 */\n    cpu.writeData(cpu.dataView.getUint16(28, true), cpu.data[(opcode & 0x1f0) >> 4]);\n    cpu.cycles++;\n  } else if ((opcode & 0xfe0f) === 0x9209) {\n    /* STY(INC), 1001 001r rrrr 1001 */\n    const i = cpu.data[(opcode & 0x1f0) >> 4];\n    const y = cpu.dataView.getUint16(28, true);\n    cpu.writeData(y, i);\n    cpu.dataView.setUint16(28, y + 1, true);\n    cpu.cycles++;\n  } else if ((opcode & 0xfe0f) === 0x920a) {\n    /* STY(DEC), 1001 001r rrrr 1010 */\n    const i = cpu.data[(opcode & 0x1f0) >> 4];\n    const y = cpu.dataView.getUint16(28, true) - 1;\n    cpu.dataView.setUint16(28, y, true);\n    cpu.writeData(y, i);\n    cpu.cycles++;\n  } else if (\n    (opcode & 0xd208) === 0x8208 &&\n    (opcode & 7) | ((opcode & 0xc00) >> 7) | ((opcode & 0x2000) >> 8)\n  ) {\n    /* STDY, 10q0 qq1r rrrr 1qqq */\n    cpu.writeData(\n      cpu.dataView.getUint16(28, true) +\n        ((opcode & 7) | ((opcode & 0xc00) >> 7) | ((opcode & 0x2000) >> 8)),\n      cpu.data[(opcode & 0x1f0) >> 4]\n    );\n    cpu.cycles++;\n  } else if ((opcode & 0xfe0f) === 0x8200) {\n    /* STZ, 1000 001r rrrr 0000 */\n    cpu.writeData(cpu.dataView.getUint16(30, true), cpu.data[(opcode & 0x1f0) >> 4]);\n    cpu.cycles++;\n  } else if ((opcode & 0xfe0f) === 0x9201) {\n    /* STZ(INC), 1001 001r rrrr 0001 */\n    const z = cpu.dataView.getUint16(30, true);\n    cpu.writeData(z, cpu.data[(opcode & 0x1f0) >> 4]);\n    cpu.dataView.setUint16(30, z + 1, true);\n    cpu.cycles++;\n  } else if ((opcode & 0xfe0f) === 0x9202) {\n    /* STZ(DEC), 1001 001r rrrr 0010 */\n    const i = cpu.data[(opcode & 0x1f0) >> 4];\n    const z = cpu.dataView.getUint16(30, true) - 1;\n    cpu.dataView.setUint16(30, z, true);\n    cpu.writeData(z, i);\n    cpu.cycles++;\n  } else if (\n    (opcode & 0xd208) === 0x8200 &&\n    (opcode & 7) | ((opcode & 0xc00) >> 7) | ((opcode & 0x2000) >> 8)\n  ) {\n    /* STDZ, 10q0 qq1r rrrr 0qqq */\n    cpu.writeData(\n      cpu.dataView.getUint16(30, true) +\n        ((opcode & 7) | ((opcode & 0xc00) >> 7) | ((opcode & 0x2000) >> 8)),\n      cpu.data[(opcode & 0x1f0) >> 4]\n    );\n    cpu.cycles++;\n  } else if ((opcode & 0xfc00) === 0x1800) {\n    /* SUB, 0001 10rd dddd rrrr */\n    const val1 = cpu.data[(opcode & 0x1f0) >> 4];\n    const val2 = cpu.data[(opcode & 0xf) | ((opcode & 0x200) >> 5)];\n    const R = val1 - val2;\n\n    cpu.data[(opcode & 0x1f0) >> 4] = R;\n    let sreg = cpu.data[95] & 0xc0;\n    sreg |= R ? 0 : 2;\n    sreg |= 128 & R ? 4 : 0;\n    sreg |= (val1 ^ val2) & (val1 ^ R) & 128 ? 8 : 0;\n    sreg |= ((sreg >> 2) & 1) ^ ((sreg >> 3) & 1) ? 0x10 : 0;\n    sreg |= val2 > val1 ? 1 : 0;\n    sreg |= 1 & ((~val1 & val2) | (val2 & R) | (R & ~val1)) ? 0x20 : 0;\n    cpu.data[95] = sreg;\n  } else if ((opcode & 0xf000) === 0x5000) {\n    /* SUBI, 0101 KKKK dddd KKKK */\n    const val1 = cpu.data[((opcode & 0xf0) >> 4) + 16];\n    const val2 = (opcode & 0xf) | ((opcode & 0xf00) >> 4);\n    const R = val1 - val2;\n    cpu.data[((opcode & 0xf0) >> 4) + 16] = R;\n    let sreg = cpu.data[95] & 0xc0;\n    sreg |= R ? 0 : 2;\n    sreg |= 128 & R ? 4 : 0;\n    sreg |= (val1 ^ val2) & (val1 ^ R) & 128 ? 8 : 0;\n    sreg |= ((sreg >> 2) & 1) ^ ((sreg >> 3) & 1) ? 0x10 : 0;\n    sreg |= val2 > val1 ? 1 : 0;\n    sreg |= 1 & ((~val1 & val2) | (val2 & R) | (R & ~val1)) ? 0x20 : 0;\n    cpu.data[95] = sreg;\n  } else if ((opcode & 0xfe0f) === 0x9402) {\n    /* SWAP, 1001 010d dddd 0010 */\n    const d = (opcode & 0x1f0) >> 4;\n    const i = cpu.data[d];\n    cpu.data[d] = ((15 & i) << 4) | ((240 & i) >>> 4);\n  } else if (opcode === 0x95a8) {\n    /* WDR, 1001 0101 1010 1000 */\n    /* not implemented */\n  } else if ((opcode & 0xfe0f) === 0x9204) {\n    /* XCH, 1001 001r rrrr 0100 */\n    const r = (opcode & 0x1f0) >> 4;\n    const val1 = cpu.data[r];\n    const val2 = cpu.data[cpu.dataView.getUint16(30, true)];\n    cpu.data[cpu.dataView.getUint16(30, true)] = val1;\n    cpu.data[r] = val2;\n  }\n\n  cpu.pc = (cpu.pc + 1) % cpu.progMem.length;\n  cpu.cycles++;\n}\n","/**\n * AVR-8 Interrupt Handling\n * Part of AVR8js\n * Reference: http://ww1.microchip.com/downloads/en/devicedoc/atmel-0856-avr-instruction-set-manual.pdf\n *\n * Copyright (C) 2019, Uri Shaked\n */\n\nimport { ICPU } from './cpu';\n\nexport function avrInterrupt(cpu: ICPU, addr: number) {\n  const sp = cpu.dataView.getUint16(93, true);\n  cpu.data[sp] = cpu.pc & 0xff;\n  cpu.data[sp - 1] = (cpu.pc >> 8) & 0xff;\n  cpu.dataView.setUint16(93, sp - 2, true);\n  cpu.data[95] &= 0x7f; // clear global interrupt flag\n  cpu.cycles += 2;\n  cpu.pc = addr;\n}\n","/**\n * AVR-8 GPIO Port implementation\n * Part of AVR8js\n * Reference: http://ww1.microchip.com/downloads/en/DeviceDoc/ATmega48A-PA-88A-PA-168A-PA-328-P-DS-DS40002061A.pdf\n *\n * Copyright (C) 2019, 2020, Uri Shaked\n */\nimport { CPU } from '../cpu/cpu';\nimport { u8 } from '../types';\n\nexport interface AVRPortConfig {\n  // Register addresses\n  PIN: u8;\n  DDR: u8;\n  PORT: u8;\n}\n\nexport type GPIOListener = (value: u8, oldValue: u8) => void;\n\nexport const portAConfig: AVRPortConfig = {\n  PIN: 0x20,\n  DDR: 0x21,\n  PORT: 0x22,\n};\n\nexport const portBConfig: AVRPortConfig = {\n  PIN: 0x23,\n  DDR: 0x24,\n  PORT: 0x25,\n};\n\nexport const portCConfig: AVRPortConfig = {\n  PIN: 0x26,\n  DDR: 0x27,\n  PORT: 0x28,\n};\n\nexport const portDConfig: AVRPortConfig = {\n  PIN: 0x29,\n  DDR: 0x2a,\n  PORT: 0x2b,\n};\n\nexport const portEConfig: AVRPortConfig = {\n  PIN: 0x2c,\n  DDR: 0x2d,\n  PORT: 0x2e,\n};\n\nexport const portFConfig: AVRPortConfig = {\n  PIN: 0x2f,\n  DDR: 0x30,\n  PORT: 0x31,\n};\n\nexport const portGConfig: AVRPortConfig = {\n  PIN: 0x32,\n  DDR: 0x33,\n  PORT: 0x34,\n};\n\nexport const portHConfig: AVRPortConfig = {\n  PIN: 0x100,\n  DDR: 0x101,\n  PORT: 0x102,\n};\n\nexport const portJConfig: AVRPortConfig = {\n  PIN: 0x103,\n  DDR: 0x104,\n  PORT: 0x105,\n};\n\nexport const portKConfig: AVRPortConfig = {\n  PIN: 0x106,\n  DDR: 0x107,\n  PORT: 0x108,\n};\n\nexport const portLConfig: AVRPortConfig = {\n  PIN: 0x109,\n  DDR: 0x10a,\n  PORT: 0x10b,\n};\n\nexport enum PinState {\n  Low,\n  High,\n  Input,\n  InputPullUp,\n}\n\n/* This mechanism allows timers to override specific GPIO pins */\nexport enum PinOverrideMode {\n  None,\n  Enable,\n  Set,\n  Clear,\n  Toggle,\n}\n\nexport class AVRIOPort {\n  private listeners: GPIOListener[] = [];\n  private pinValue: u8 = 0;\n  private overrideMask: u8 = 0xff;\n  private overrideValue: u8;\n  private lastValue: u8 = 0;\n  private lastDdr: u8 = 0;\n\n  constructor(private cpu: CPU, private portConfig: AVRPortConfig) {\n    cpu.writeHooks[portConfig.DDR] = (value: u8) => {\n      const portValue = cpu.data[portConfig.PORT];\n      cpu.data[portConfig.DDR] = value;\n      this.updatePinRegister(portValue, value);\n      this.writeGpio(portValue, value);\n      return true;\n    };\n    cpu.writeHooks[portConfig.PORT] = (value: u8) => {\n      const ddrMask = cpu.data[portConfig.DDR];\n      cpu.data[portConfig.PORT] = value;\n      this.updatePinRegister(value, ddrMask);\n      this.writeGpio(value, ddrMask);\n      return true;\n    };\n    cpu.writeHooks[portConfig.PIN] = (value: u8) => {\n      // Writing to 1 PIN toggles PORT bits\n      const oldPortValue = cpu.data[portConfig.PORT];\n      const ddrMask = cpu.data[portConfig.DDR];\n      const portValue = oldPortValue ^ value;\n      cpu.data[portConfig.PORT] = portValue;\n      cpu.data[portConfig.PIN] = (cpu.data[portConfig.PIN] & ~ddrMask) | (portValue & ddrMask);\n      this.writeGpio(portValue, ddrMask);\n      return true;\n    };\n    // The following hook is used by the timer compare output to override GPIO pins:\n    cpu.gpioTimerHooks[portConfig.PORT] = (pin: u8, mode: PinOverrideMode) => {\n      const pinMask = 1 << pin;\n      if (mode == PinOverrideMode.None) {\n        this.overrideMask |= pinMask;\n      } else {\n        this.overrideMask &= ~pinMask;\n        switch (mode) {\n          case PinOverrideMode.Enable:\n            this.overrideValue &= ~pinMask;\n            this.overrideValue |= cpu.data[portConfig.PORT] & pinMask;\n            break;\n          case PinOverrideMode.Set:\n            this.overrideValue |= pinMask;\n            break;\n          case PinOverrideMode.Clear:\n            this.overrideValue &= ~pinMask;\n            break;\n          case PinOverrideMode.Toggle:\n            this.overrideValue ^= pinMask;\n            break;\n        }\n      }\n      this.writeGpio(cpu.data[portConfig.PORT], cpu.data[portConfig.DDR]);\n    };\n  }\n\n  addListener(listener: GPIOListener) {\n    this.listeners.push(listener);\n  }\n\n  removeListener(listener: GPIOListener) {\n    this.listeners = this.listeners.filter((l) => l !== listener);\n  }\n\n  /**\n   * Get the state of a given GPIO pin\n   *\n   * @param index Pin index to return from 0 to 7\n   * @returns PinState.Low or PinState.High if the pin is set to output, PinState.Input if the pin is set\n   *   to input, and PinState.InputPullUp if the pin is set to input and the internal pull-up resistor has\n   *   been enabled.\n   */\n  pinState(index: number) {\n    const ddr = this.cpu.data[this.portConfig.DDR];\n    const port = this.cpu.data[this.portConfig.PORT];\n    const bitMask = 1 << index;\n    if (ddr & bitMask) {\n      return this.lastValue & bitMask ? PinState.High : PinState.Low;\n    } else {\n      return port & bitMask ? PinState.InputPullUp : PinState.Input;\n    }\n  }\n\n  /**\n   * Sets the input value for the given pin. This is the value that\n   * will be returned when reading from the PIN register.\n   */\n  setPin(index: number, value: boolean) {\n    const bitMask = 1 << index;\n    this.pinValue &= ~bitMask;\n    if (value) {\n      this.pinValue |= bitMask;\n    }\n    this.updatePinRegister(this.cpu.data[this.portConfig.PORT], this.cpu.data[this.portConfig.DDR]);\n  }\n  \n  /*\n  * Will set the output of the ADC and sets analogReadFinished flag\n  * Written by Mark Megarry\n  */\n  setAnalogValue(analogValue: number){\n\t  \t//Write analogValue to ADCH and ADCL\n        this.cpu.data[0x78] = analogValue & 0xff;\n        this.cpu.data[0x79] = (analogValue >> 8) & 0x3;\n  }\n\n  private updatePinRegister(port: u8, ddr: u8) {\n    this.cpu.data[this.portConfig.PIN] = (this.pinValue & ~ddr) | (port & ddr);\n  }\n\n  private writeGpio(value: u8, ddr: u8) {\n    const newValue = ((value & this.overrideMask) | this.overrideValue) & ddr;\n    const prevValue = this.lastValue;\n    if (newValue !== prevValue || ddr !== this.lastDdr) {\n      this.lastValue = newValue;\n      this.lastDdr = ddr;\n      for (const listener of this.listeners) {\n        listener(newValue, prevValue);\n      }\n    }\n  }\n}\n","/**\n * AVR-8 Timers\n * Part of AVR8js\n * Reference: http://ww1.microchip.com/downloads/en/DeviceDoc/ATmega48A-PA-88A-PA-168A-PA-328-P-DS-DS40002061A.pdf\n *\n * Copyright (C) 2019, 2020, Uri Shaked\n */\n\nimport { CPU } from '../cpu/cpu';\nimport { avrInterrupt } from '../cpu/interrupt';\nimport { portBConfig, portDConfig, PinOverrideMode } from './gpio';\n\nconst timer01Dividers = {\n  0: 0,\n  1: 1,\n  2: 8,\n  3: 64,\n  4: 256,\n  5: 1024,\n  6: 0, // TODO: External clock source on T0 pin. Clock on falling edge.\n  7: 0, // TODO: External clock source on T0 pin. Clock on rising edge.\n};\n\nconst TOV = 1;\nconst OCFA = 2;\nconst OCFB = 4;\n\nconst TOIE = 1;\nconst OCIEA = 2;\nconst OCIEB = 4;\n\ntype u8 = number;\ntype u16 = number;\n\ninterface TimerDividers {\n  0: number;\n  1: number;\n  2: number;\n  3: number;\n  4: number;\n  5: number;\n  6: number;\n  7: number;\n}\n\ninterface AVRTimerConfig {\n  bits: 8 | 16;\n  captureInterrupt: u8;\n  compAInterrupt: u8;\n  compBInterrupt: u8;\n  ovfInterrupt: u8;\n\n  // Register addresses\n  TIFR: u8;\n  OCRA: u8;\n  OCRB: u8;\n  ICR: u8;\n  TCNT: u8;\n  TCCRA: u8;\n  TCCRB: u8;\n  TCCRC: u8;\n  TIMSK: u8;\n\n  dividers: TimerDividers;\n\n  // Output compare pins\n  compPortA: u16;\n  compPinA: u8;\n  compPortB: u16;\n  compPinB: u8;\n}\n\nexport const timer0Config: AVRTimerConfig = {\n  bits: 8,\n  captureInterrupt: 0, // not available\n  compAInterrupt: 0x1c,\n  compBInterrupt: 0x1e,\n  ovfInterrupt: 0x20,\n  TIFR: 0x35,\n  OCRA: 0x47,\n  OCRB: 0x48,\n  ICR: 0, // not available\n  TCNT: 0x46,\n  TCCRA: 0x44,\n  TCCRB: 0x45,\n  TCCRC: 0, // not available\n  TIMSK: 0x6e,\n  dividers: timer01Dividers,\n  compPortA: portDConfig.PORT,\n  compPinA: 6,\n  compPortB: portDConfig.PORT,\n  compPinB: 5,\n};\n\nexport const timer1Config: AVRTimerConfig = {\n  bits: 16,\n  captureInterrupt: 0x14,\n  compAInterrupt: 0x16,\n  compBInterrupt: 0x18,\n  ovfInterrupt: 0x1a,\n  TIFR: 0x36,\n  OCRA: 0x88,\n  OCRB: 0x8a,\n  ICR: 0x86,\n  TCNT: 0x84,\n  TCCRA: 0x80,\n  TCCRB: 0x81,\n  TCCRC: 0x82,\n  TIMSK: 0x6f,\n  dividers: timer01Dividers,\n  compPortA: portBConfig.PORT,\n  compPinA: 1,\n  compPortB: portBConfig.PORT,\n  compPinB: 2,\n};\n\nexport const timer2Config: AVRTimerConfig = {\n  bits: 8,\n  captureInterrupt: 0, // not available\n  compAInterrupt: 0x0e,\n  compBInterrupt: 0x10,\n  ovfInterrupt: 0x12,\n  TIFR: 0x37,\n  OCRA: 0xb3,\n  OCRB: 0xb4,\n  ICR: 0, // not available\n  TCNT: 0xb2,\n  TCCRA: 0xb0,\n  TCCRB: 0xb1,\n  TCCRC: 0, // not available\n  TIMSK: 0x70,\n  dividers: {\n    0: 0,\n    1: 1,\n    2: 8,\n    3: 32,\n    4: 64,\n    5: 128,\n    6: 256,\n    7: 1024,\n  },\n  compPortA: portBConfig.PORT,\n  compPinA: 3,\n  compPortB: portDConfig.PORT,\n  compPinB: 3,\n};\n\n/* All the following types and constants are related to WGM (Waveform Generation Mode) bits: */\nenum TimerMode {\n  Normal,\n  PWMPhaseCorrect,\n  CTC,\n  FastPWM,\n  PWMPhaseFrequencyCorrect,\n  Reserved,\n}\n\nenum TOVUpdateMode {\n  Max,\n  Top,\n  Bottom,\n}\n\nenum OCRUpdateMode {\n  Immediate,\n  Top,\n  Bottom,\n}\n\nconst TopOCRA = 1;\nconst TopICR = 2;\ntype TimerTopValue = 0xff | 0x1ff | 0x3ff | 0xffff | typeof TopOCRA | typeof TopICR;\n\ntype WGMConfig = [TimerMode, TimerTopValue, OCRUpdateMode, TOVUpdateMode];\n\nconst wgmModes8Bit: WGMConfig[] = [\n  /*0*/ [TimerMode.Normal, 0xff, OCRUpdateMode.Immediate, TOVUpdateMode.Max],\n  /*1*/ [TimerMode.PWMPhaseCorrect, 0xff, OCRUpdateMode.Top, TOVUpdateMode.Bottom],\n  /*2*/ [TimerMode.CTC, TopOCRA, OCRUpdateMode.Immediate, TOVUpdateMode.Max],\n  /*3*/ [TimerMode.FastPWM, 0xff, OCRUpdateMode.Bottom, TOVUpdateMode.Max],\n  /*4*/ [TimerMode.Reserved, 0xff, OCRUpdateMode.Immediate, TOVUpdateMode.Max],\n  /*5*/ [TimerMode.PWMPhaseCorrect, TopOCRA, OCRUpdateMode.Top, TOVUpdateMode.Bottom],\n  /*6*/ [TimerMode.Reserved, 0xff, OCRUpdateMode.Immediate, TOVUpdateMode.Max],\n  /*7*/ [TimerMode.FastPWM, TopOCRA, OCRUpdateMode.Bottom, TOVUpdateMode.Top],\n];\n\n// Table 16-4 in the datasheet\nconst wgmModes16Bit: WGMConfig[] = [\n  /*0 */ [TimerMode.Normal, 0xffff, OCRUpdateMode.Immediate, TOVUpdateMode.Max],\n  /*1 */ [TimerMode.PWMPhaseCorrect, 0x00ff, OCRUpdateMode.Top, TOVUpdateMode.Bottom],\n  /*2 */ [TimerMode.PWMPhaseCorrect, 0x01ff, OCRUpdateMode.Top, TOVUpdateMode.Bottom],\n  /*3 */ [TimerMode.PWMPhaseCorrect, 0x03ff, OCRUpdateMode.Top, TOVUpdateMode.Bottom],\n  /*4 */ [TimerMode.CTC, TopOCRA, OCRUpdateMode.Immediate, TOVUpdateMode.Max],\n  /*5 */ [TimerMode.FastPWM, 0x00ff, OCRUpdateMode.Bottom, TOVUpdateMode.Top],\n  /*6 */ [TimerMode.FastPWM, 0x01ff, OCRUpdateMode.Bottom, TOVUpdateMode.Top],\n  /*7 */ [TimerMode.FastPWM, 0x03ff, OCRUpdateMode.Bottom, TOVUpdateMode.Top],\n  /*8 */ [TimerMode.PWMPhaseFrequencyCorrect, TopICR, OCRUpdateMode.Bottom, TOVUpdateMode.Bottom],\n  /*9 */ [TimerMode.PWMPhaseFrequencyCorrect, TopOCRA, OCRUpdateMode.Bottom, TOVUpdateMode.Bottom],\n  /*10*/ [TimerMode.PWMPhaseCorrect, TopICR, OCRUpdateMode.Top, TOVUpdateMode.Bottom],\n  /*11*/ [TimerMode.PWMPhaseCorrect, TopOCRA, OCRUpdateMode.Top, TOVUpdateMode.Bottom],\n  /*12*/ [TimerMode.CTC, TopICR, OCRUpdateMode.Immediate, TOVUpdateMode.Max],\n  /*13*/ [TimerMode.Reserved, 0xffff, OCRUpdateMode.Immediate, TOVUpdateMode.Max],\n  /*14*/ [TimerMode.FastPWM, TopICR, OCRUpdateMode.Bottom, TOVUpdateMode.Top],\n  /*15*/ [TimerMode.FastPWM, TopOCRA, OCRUpdateMode.Bottom, TOVUpdateMode.Top],\n];\n\ntype CompBitsValue = 0 | 1 | 2 | 3;\n\nfunction compToOverride(comp: CompBitsValue) {\n  switch (comp) {\n    case 1:\n      return PinOverrideMode.Toggle;\n    case 2:\n      return PinOverrideMode.Clear;\n    case 3:\n      return PinOverrideMode.Set;\n    default:\n      return PinOverrideMode.Enable;\n  }\n}\n\nexport class AVRTimer {\n  private lastCycle = 0;\n  private ocrA: u16 = 0;\n  private ocrB: u16 = 0;\n  private icr: u16 = 0; // only for 16-bit timers\n  private timerMode: TimerMode;\n  private topValue: TimerTopValue;\n  private tcnt: u16 = 0;\n  private compA: CompBitsValue;\n  private compB: CompBitsValue;\n  private tcntUpdated = false;\n  private countingUp = true;\n\n  // This is the temporary register used to access 16-bit registers (section 16.3 of the datasheet)\n  private highByteTemp: u8 = 0;\n\n  constructor(private cpu: CPU, private config: AVRTimerConfig) {\n    this.updateWGMConfig();\n    this.cpu.readHooks[config.TCNT] = (addr: u8) => {\n      this.tick();\n      if (this.config.bits === 16) {\n        this.cpu.data[addr + 1] = this.tcnt >> 8;\n      }\n      return (this.cpu.data[addr] = this.tcnt & 0xff);\n    };\n\n    this.cpu.writeHooks[config.TCNT] = (value: u8) => {\n      this.tcnt = (this.highByteTemp << 8) | value;\n      this.tcntUpdated = true;\n      this.timerUpdated();\n    };\n    this.cpu.writeHooks[config.OCRA] = (value: u8) => {\n      // TODO implement buffering when timer running in PWM mode\n      this.ocrA = (this.highByteTemp << 8) | value;\n    };\n    this.cpu.writeHooks[config.OCRB] = (value: u8) => {\n      // TODO implement buffering when timer running in PWM mode\n      this.ocrB = (this.highByteTemp << 8) | value;\n    };\n    this.cpu.writeHooks[config.ICR] = (value: u8) => {\n      this.icr = (this.highByteTemp << 8) | value;\n    };\n    if (this.config.bits === 16) {\n      const updateTempRegister = (value: u8) => {\n        this.highByteTemp = value;\n      };\n      this.cpu.writeHooks[config.TCNT + 1] = updateTempRegister;\n      this.cpu.writeHooks[config.OCRA + 1] = updateTempRegister;\n      this.cpu.writeHooks[config.OCRB + 1] = updateTempRegister;\n      this.cpu.writeHooks[config.ICR + 1] = updateTempRegister;\n    }\n    cpu.writeHooks[config.TCCRA] = (value) => {\n      this.cpu.data[config.TCCRA] = value;\n      this.compA = ((value >> 6) & 0x3) as CompBitsValue;\n      this.updateCompA(this.compA ? PinOverrideMode.Enable : PinOverrideMode.None);\n      this.compB = ((value >> 4) & 0x3) as CompBitsValue;\n      this.updateCompB(this.compB ? PinOverrideMode.Enable : PinOverrideMode.None);\n      this.updateWGMConfig();\n      return true;\n    };\n    cpu.writeHooks[config.TCCRB] = (value) => {\n      this.cpu.data[config.TCCRB] = value;\n      this.updateWGMConfig();\n      return true;\n    };\n  }\n\n  reset() {\n    this.lastCycle = 0;\n    this.ocrA = 0;\n    this.ocrB = 0;\n  }\n\n  get TIFR() {\n    return this.cpu.data[this.config.TIFR];\n  }\n\n  set TIFR(value: u8) {\n    this.cpu.data[this.config.TIFR] = value;\n  }\n\n  get TCCRA() {\n    return this.cpu.data[this.config.TCCRA];\n  }\n\n  get TCCRB() {\n    return this.cpu.data[this.config.TCCRB];\n  }\n\n  get TIMSK() {\n    return this.cpu.data[this.config.TIMSK];\n  }\n\n  get CS() {\n    return (this.TCCRB & 0x7) as 0 | 1 | 2 | 3 | 4 | 5 | 6 | 7;\n  }\n\n  get WGM() {\n    const mask = this.config.bits === 16 ? 0x18 : 0x8;\n    return ((this.TCCRB & mask) >> 1) | (this.TCCRA & 0x3);\n  }\n\n  get TOP() {\n    switch (this.topValue) {\n      case TopOCRA:\n        return this.ocrA;\n      case TopICR:\n        return this.icr;\n      default:\n        return this.topValue;\n    }\n  }\n\n  private updateWGMConfig() {\n    const wgmModes = this.config.bits === 16 ? wgmModes16Bit : wgmModes8Bit;\n    const [timerMode, topValue] = wgmModes[this.WGM];\n    this.timerMode = timerMode;\n    this.topValue = topValue;\n  }\n\n  tick() {\n    const divider = this.config.dividers[this.CS];\n    const delta = this.cpu.cycles - this.lastCycle;\n    if (divider && delta >= divider) {\n      const counterDelta = Math.floor(delta / divider);\n      this.lastCycle += counterDelta * divider;\n      const val = this.tcnt;\n      const { timerMode } = this;\n      const phasePwm =\n        timerMode === TimerMode.PWMPhaseCorrect || timerMode === TimerMode.PWMPhaseFrequencyCorrect;\n      const newVal = phasePwm\n        ? this.phasePwmCount(val, counterDelta)\n        : (val + counterDelta) % (this.TOP + 1);\n      // A CPU write overrides (has priority over) all counter clear or count operations.\n      if (!this.tcntUpdated) {\n        this.tcnt = newVal;\n        this.timerUpdated();\n      }\n      if ((timerMode === TimerMode.Normal || timerMode === TimerMode.FastPWM) && val > newVal) {\n        this.TIFR |= TOV;\n      }\n    }\n    this.tcntUpdated = false;\n    if (this.cpu.interruptsEnabled) {\n      const { TIFR, TIMSK } = this;\n      if (TIFR & TOV && TIMSK & TOIE) {\n        avrInterrupt(this.cpu, this.config.ovfInterrupt);\n        this.TIFR &= ~TOV;\n      }\n      if (TIFR & OCFA && TIMSK & OCIEA) {\n        avrInterrupt(this.cpu, this.config.compAInterrupt);\n        this.TIFR &= ~OCFA;\n      }\n      if (TIFR & OCFB && TIMSK & OCIEB) {\n        avrInterrupt(this.cpu, this.config.compBInterrupt);\n        this.TIFR &= ~OCFB;\n      }\n    }\n  }\n\n  private phasePwmCount(value: u16, delta: u8) {\n    while (delta > 0) {\n      if (this.countingUp) {\n        value++;\n        if (value === this.TOP && !this.tcntUpdated) {\n          this.countingUp = false;\n        }\n      } else {\n        value--;\n        if (!value && !this.tcntUpdated) {\n          this.countingUp = true;\n          this.TIFR |= TOV;\n        }\n      }\n      delta--;\n    }\n    return value;\n  }\n\n  private timerUpdated() {\n    const value = this.tcnt;\n\n    if (this.ocrA && value === this.ocrA) {\n      this.TIFR |= OCFA;\n      if (this.timerMode === TimerMode.CTC) {\n        // Clear Timer on Compare Match (CTC) Mode\n        this.tcnt = 0;\n        this.TIFR |= TOV;\n      }\n      if (this.compA) {\n        this.updateCompPin(this.compA, 'A');\n      }\n    }\n    if (this.ocrB && value === this.ocrB) {\n      this.TIFR |= OCFB;\n      if (this.compB) {\n        this.updateCompPin(this.compB, 'B');\n      }\n    }\n  }\n\n  private updateCompPin(compValue: CompBitsValue, pinName: 'A' | 'B') {\n    let newValue: PinOverrideMode = PinOverrideMode.None;\n    const inverted = compValue === 3;\n    const isSet = this.countingUp === inverted;\n    switch (this.timerMode) {\n      case TimerMode.Normal:\n      case TimerMode.CTC:\n      case TimerMode.FastPWM:\n        newValue = compToOverride(compValue);\n        break;\n\n      case TimerMode.PWMPhaseCorrect:\n      case TimerMode.PWMPhaseFrequencyCorrect:\n        newValue = isSet ? PinOverrideMode.Set : PinOverrideMode.Clear;\n        break;\n    }\n\n    if (newValue !== PinOverrideMode.None) {\n      if (pinName === 'A') {\n        this.updateCompA(newValue);\n      } else {\n        this.updateCompB(newValue);\n      }\n    }\n  }\n\n  private updateCompA(value: PinOverrideMode) {\n    const { compPortA, compPinA } = this.config;\n    const hook = this.cpu.gpioTimerHooks[compPortA];\n    if (hook) {\n      hook(compPinA, value, compPortA);\n    }\n  }\n\n  private updateCompB(value: PinOverrideMode) {\n    const { compPortB, compPinB } = this.config;\n    const hook = this.cpu.gpioTimerHooks[compPortB];\n    if (hook) {\n      hook(compPinB, value, compPortB);\n    }\n  }\n}\n","import { CPU } from '../cpu/cpu';\nimport { avrInterrupt } from '../cpu/interrupt';\nimport { u8 } from '../types';\n\nexport interface USARTConfig {\n  rxCompleteInterrupt: u8;\n  dataRegisterEmptyInterrupt: u8;\n  txCompleteInterrupt: u8;\n\n  UCSRA: u8;\n  UCSRB: u8;\n  UCSRC: u8;\n  UBRRL: u8;\n  UBRRH: u8;\n  UDR: u8;\n}\n\nexport const usart0Config: USARTConfig = {\n  rxCompleteInterrupt: 0x24,\n  dataRegisterEmptyInterrupt: 0x26,\n  txCompleteInterrupt: 0x28,\n  UCSRA: 0xc0,\n  UCSRB: 0xc1,\n  UCSRC: 0xc2,\n  UBRRL: 0xc4,\n  UBRRH: 0xc5,\n  UDR: 0xc6,\n};\n\nexport type USARTTransmitCallback = (value: u8) => void;\nexport type USARTLineTransmitCallback = (value: string) => void;\n\n/* eslint-disable @typescript-eslint/no-unused-vars */\n// Register bits:\nconst UCSRA_RXC = 0x80; // USART Receive Complete\nconst UCSRA_TXC = 0x40; // USART Transmit Complete\nconst UCSRA_UDRE = 0x20; // USART Data Register Empty\nconst UCSRA_FE = 0x10; // Frame Error\nconst UCSRA_DOR = 0x8; // Data OverRun\nconst UCSRA_UPE = 0x4; // USART Parity Error\nconst UCSRA_U2X = 0x2; // Double the USART Transmission Speed\nconst UCSRA_MPCM = 0x1; // Multi-processor Communication Mode\nconst UCSRB_RXCIE = 0x80; // RX Complete Interrupt Enable\nconst UCSRB_TXCIE = 0x40; // TX Complete Interrupt Enable\nconst UCSRB_UDRIE = 0x20; // USART Data Register Empty Interrupt Enable\nconst UCSRB_RXEN = 0x10; // Receiver Enable\nconst UCSRB_TXEN = 0x8; // Transmitter Enable\nconst UCSRB_UCSZ2 = 0x4; // Character Size 2\nconst UCSRB_RXB8 = 0x2; // Receive Data Bit 8\nconst UCSRB_TXB8 = 0x1; // Transmit Data Bit 8\nconst UCSRC_UMSEL1 = 0x80; // USART Mode Select 1\nconst UCSRC_UMSEL0 = 0x40; // USART Mode Select 0\nconst UCSRC_UPM1 = 0x20; // Parity Mode 1\nconst UCSRC_UPM0 = 0x10; // Parity Mode 0\nconst UCSRC_USBS = 0x8; // Stop Bit Select\nconst UCSRC_UCSZ1 = 0x4; // Character Size 1\nconst UCSRC_UCSZ0 = 0x2; // Character Size 0\nconst UCSRC_UCPOL = 0x1; // Clock Polarity\n/* eslint-enable @typescript-eslint/no-unused-vars */\n\nexport class AVRUSART {\n  public onByteTransmit: USARTTransmitCallback | null = null;\n  public onLineTransmit: USARTLineTransmitCallback | null = null;\n\n  private lineBuffer = '';\n\n  constructor(private cpu: CPU, private config: USARTConfig, private freqMHz: number) {\n    this.cpu.writeHooks[config.UCSRA] = (value) => {\n      this.cpu.data[config.UCSRA] = value | UCSRA_UDRE | UCSRA_TXC;\n      return true;\n    };\n    this.cpu.writeHooks[config.UCSRB] = (value, oldValue) => {\n      if (value & UCSRB_TXEN && !(oldValue & UCSRB_TXEN)) {\n        // Enabling the transmission - mark UDR as empty\n        this.cpu.data[config.UCSRA] |= UCSRA_UDRE;\n      }\n    };\n    this.cpu.writeHooks[config.UDR] = (value) => {\n      if (this.onByteTransmit) {\n        this.onByteTransmit(value);\n      }\n      if (this.onLineTransmit) {\n        const ch = String.fromCharCode(value);\n        if (ch === '\\n') {\n          this.onLineTransmit(this.lineBuffer);\n          this.lineBuffer = '';\n        } else {\n          this.lineBuffer += ch;\n        }\n      }\n      this.cpu.data[config.UCSRA] |= UCSRA_UDRE | UCSRA_TXC;\n    };\n  }\n\n  tick() {\n    if (this.cpu.interruptsEnabled) {\n      const ucsra = this.cpu.data[this.config.UCSRA];\n      const ucsrb = this.cpu.data[this.config.UCSRB];\n      if (ucsra & UCSRA_UDRE && ucsrb & UCSRB_UDRIE) {\n        avrInterrupt(this.cpu, this.config.dataRegisterEmptyInterrupt);\n        this.cpu.data[this.config.UCSRA] &= ~UCSRA_UDRE;\n      }\n      if (ucsra & UCSRA_TXC && ucsrb & UCSRB_TXCIE) {\n        avrInterrupt(this.cpu, this.config.txCompleteInterrupt);\n        this.cpu.data[this.config.UCSRA] &= ~UCSRA_TXC;\n      }\n    }\n  }\n\n  get baudRate() {\n    const UBRR = (this.cpu.data[this.config.UBRRH] << 8) | this.cpu.data[this.config.UBRRL];\n    const multiplier = this.cpu.data[this.config.UCSRA] & UCSRA_U2X ? 8 : 16;\n    return Math.floor(this.freqMHz / (multiplier * (1 + UBRR)));\n  }\n\n  get bitsPerChar() {\n    const ucsz =\n      ((this.cpu.data[this.config.UCSRC] & (UCSRC_UCSZ1 | UCSRC_UCSZ0)) >> 1) |\n      (this.cpu.data[this.config.UCSRB] & UCSRB_UCSZ2);\n    switch (ucsz) {\n      case 0:\n        return 5;\n      case 1:\n        return 6;\n      case 2:\n        return 7;\n      case 3:\n        return 8;\n      default: // 4..6 are reserved\n      case 7:\n        return 9;\n    }\n  }\n}\n","import { CPU } from '../cpu/cpu';\nimport { avrInterrupt } from '../cpu/interrupt';\nimport { u8, u16, u32 } from '../types';\n\nexport interface EEPROMBackend {\n  readMemory(addr: u16): u8;\n  writeMemory(addr: u16, value: u8): void;\n  eraseMemory(addr: u16): void;\n}\n\nexport class EEPROMMemoryBackend implements EEPROMBackend {\n  readonly memory: Uint8Array;\n\n  constructor(size: u16) {\n    this.memory = new Uint8Array(size);\n    this.memory.fill(0xff);\n  }\n\n  readMemory(addr: u16) {\n    return this.memory[addr];\n  }\n\n  writeMemory(addr: u16, value: u8) {\n    this.memory[addr] &= value;\n  }\n\n  eraseMemory(addr: u16) {\n    this.memory[addr] = 0xff;\n  }\n}\n\nexport interface AVREEPROMConfig {\n  eepromReadyInterrupt: u8;\n\n  EECR: u8;\n  EEDR: u8;\n  EEARL: u8;\n  EEARH: u8;\n\n  /** The amount of clock cycles erase takes */\n  eraseCycles: u32;\n  /** The amount of clock cycles a write takes */\n  writeCycles: u32;\n}\n\nexport const eepromConfig: AVREEPROMConfig = {\n  eepromReadyInterrupt: 0x2c,\n  EECR: 0x3f,\n  EEDR: 0x40,\n  EEARL: 0x41,\n  EEARH: 0x42,\n  eraseCycles: 28800, // 1.8ms at 16MHz\n  writeCycles: 28800, // 1.8ms at 16MHz\n};\n\nconst EERE = 1 << 0;\nconst EEPE = 1 << 1;\nconst EEMPE = 1 << 2;\nconst EERIE = 1 << 3;\nconst EEPM0 = 1 << 4;\nconst EEPM1 = 1 << 5;\n\nexport class AVREEPROM {\n  /**\n   * Used to keep track on the last write to EEMPE. From the datasheet:\n   * The EEMPE bit determines whether setting EEPE to one causes the EEPROM to be written.\n   * When EEMPE is set, setting EEPE within four clock cycles will write data to the EEPROM\n   * at the selected address If EEMPE is zero, setting EEPE will have no effect.\n   */\n  private writeEnabledCycles = 0;\n\n  private writeCompleteCycles = 0;\n\n  constructor(\n    private cpu: CPU,\n    private backend: EEPROMBackend,\n    private config: AVREEPROMConfig = eepromConfig\n  ) {\n    this.cpu.writeHooks[this.config.EECR] = (eecr) => {\n      const { EEARH, EEARL, EECR, EEDR } = this.config;\n\n      const addr = (this.cpu.data[EEARH] << 8) | this.cpu.data[EEARL];\n\n      if (eecr & EEMPE) {\n        this.writeEnabledCycles = this.cpu.cycles + 4;\n      }\n\n      // Read\n      if (eecr & EERE) {\n        this.cpu.data[EEDR] = this.backend.readMemory(addr);\n        // When the EEPROM is read, the CPU is halted for four cycles before the\n        // next instruction is executed.\n        this.cpu.cycles += 4;\n        return true;\n      }\n\n      // Write\n      if (eecr & EEPE) {\n        //  If EEMPE is zero, setting EEPE will have no effect.\n        if (this.cpu.cycles >= this.writeEnabledCycles) {\n          return true;\n        }\n        // Check for write-in-progress\n        if (this.cpu.cycles < this.writeCompleteCycles) {\n          return true;\n        }\n\n        const eedr = this.cpu.data[EEDR];\n\n        this.writeCompleteCycles = this.cpu.cycles;\n\n        // Erase\n        if (!(eecr & EEPM1)) {\n          this.backend.eraseMemory(addr);\n          this.writeCompleteCycles += this.config.eraseCycles;\n        }\n        // Write\n        if (!(eecr & EEPM0)) {\n          this.backend.writeMemory(addr, eedr);\n          this.writeCompleteCycles += this.config.writeCycles;\n        }\n\n        this.cpu.data[EECR] |= EEPE;\n        // When EEPE has been set, the CPU is halted for two cycles before the\n        // next instruction is executed.\n        this.cpu.cycles += 2;\n        return true;\n      }\n\n      return false;\n    };\n  }\n\n  tick() {\n    const { EECR, eepromReadyInterrupt } = this.config;\n\n    if (this.writeEnabledCycles && this.cpu.cycles > this.writeEnabledCycles) {\n      this.cpu.data[EECR] &= ~EEMPE;\n    }\n    if (this.writeCompleteCycles && this.cpu.cycles > this.writeCompleteCycles) {\n      this.cpu.data[EECR] &= ~EEPE;\n      if (this.cpu.interruptsEnabled && this.cpu.data[EECR] & EERIE) {\n        avrInterrupt(this.cpu, eepromReadyInterrupt);\n      }\n    }\n  }\n}\n","import { CPU } from '../cpu/cpu';\nimport { avrInterrupt } from '../cpu/interrupt';\nimport { u8 } from '../types';\n\nexport interface TWIEventHandler {\n  start(repeated: boolean): void;\n\n  stop(): void;\n\n  connectToSlave(addr: u8, write: boolean): void;\n\n  writeByte(value: u8): void;\n\n  readByte(ack: boolean): void;\n}\n\nexport interface TWIConfig {\n  twiInterrupt: u8;\n\n  TWBR: u8;\n  TWCR: u8;\n  TWSR: u8;\n  TWDR: u8;\n  TWAR: u8;\n  TWAMR: u8;\n}\n\n/* eslint-disable @typescript-eslint/no-unused-vars */\n// Register bits:\nconst TWCR_TWINT = 0x80; // TWI Interrupt Flag\nconst TWCR_TWEA = 0x40; // TWI Enable Acknowledge Bit\nconst TWCR_TWSTA = 0x20; // TWI START Condition Bit\nconst TWCR_TWSTO = 0x10; // TWI STOP Condition Bit\nconst TWCR_TWWC = 0x8; //TWI Write Collision Flag\nconst TWCR_TWEN = 0x4; //  TWI Enable Bit\nconst TWCR_TWIE = 0x1; // TWI Interrupt Enable\nconst TWSR_TWS_MASK = 0xf8; // TWI Status\nconst TWSR_TWPS1 = 0x2; // TWI Prescaler Bits\nconst TWSR_TWPS0 = 0x1; // TWI Prescaler Bits\nconst TWSR_TWPS_MASK = TWSR_TWPS1 | TWSR_TWPS0; // TWI Prescaler mask\nconst TWAR_TWA_MASK = 0xfe; //  TWI (Slave) Address Register\nconst TWAR_TWGCE = 0x1; // TWI General Call Recognition Enable Bit\n\nconst STATUS_BUS_ERROR = 0x0;\nconst STATUS_TWI_IDLE = 0xf8;\n// Master states\nconst STATUS_START = 0x08;\nconst STATUS_REPEATED_START = 0x10;\nconst STATUS_SLAW_ACK = 0x18;\nconst STATUS_SLAW_NACK = 0x20;\nconst STATUS_DATA_SENT_ACK = 0x28;\nconst STATUS_DATA_SENT_NACK = 0x30;\nconst STATUS_DATA_LOST_ARBITRATION = 0x38;\nconst STATUS_SLAR_ACK = 0x40;\nconst STATUS_SLAR_NACK = 0x48;\nconst STATUS_DATA_RECEIVED_ACK = 0x50;\nconst STATUS_DATA_RECEIVED_NACK = 0x58;\n// TODO: add slave states\n/* eslint-enable @typescript-eslint/no-unused-vars */\n\nexport const twiConfig: TWIConfig = {\n  twiInterrupt: 0x30,\n  TWBR: 0xb8,\n  TWSR: 0xb9,\n  TWAR: 0xba,\n  TWDR: 0xbb,\n  TWCR: 0xbc,\n  TWAMR: 0xbd,\n};\n\n// A simple TWI Event Handler that sends a NACK for all events\nexport class NoopTWIEventHandler implements TWIEventHandler {\n  constructor(protected twi: AVRTWI) {}\n\n  start() {\n    this.twi.completeStart();\n  }\n\n  stop() {\n    this.twi.completeStop();\n  }\n\n  connectToSlave() {\n    this.twi.completeConnect(false);\n  }\n\n  writeByte() {\n    this.twi.completeWrite(false);\n  }\n\n  readByte() {\n    this.twi.completeRead(0xff);\n  }\n}\n\nexport class AVRTWI {\n  public eventHandler: TWIEventHandler = new NoopTWIEventHandler(this);\n\n  private nextTick: (() => void) | null = null;\n\n  constructor(private cpu: CPU, private config: TWIConfig, private freqMHz: number) {\n    this.updateStatus(STATUS_TWI_IDLE);\n    this.cpu.writeHooks[config.TWCR] = (value) => {\n      const clearInt = value & TWCR_TWINT;\n      if (clearInt) {\n        value &= ~TWCR_TWINT;\n      }\n      const { status } = this;\n      if (clearInt && value & TWCR_TWEN) {\n        const twdrValue = this.cpu.data[this.config.TWDR];\n        this.nextTick = () => {\n          if (value & TWCR_TWSTA) {\n            this.eventHandler.start(status !== STATUS_TWI_IDLE);\n          } else if (value & TWCR_TWSTO) {\n            this.eventHandler.stop();\n          } else if (status === STATUS_START) {\n            this.eventHandler.connectToSlave(twdrValue >> 1, twdrValue & 0x1 ? false : true);\n          } else if (status === STATUS_SLAW_ACK || status === STATUS_DATA_SENT_ACK) {\n            this.eventHandler.writeByte(twdrValue);\n          } else if (status === STATUS_SLAR_ACK || status === STATUS_DATA_RECEIVED_ACK) {\n            const ack = !!(value & TWCR_TWEA);\n            this.eventHandler.readByte(ack);\n          }\n        };\n        this.cpu.data[config.TWCR] = value;\n        return true;\n      }\n    };\n  }\n\n  tick() {\n    if (this.nextTick) {\n      this.nextTick();\n      this.nextTick = null;\n    }\n    if (this.cpu.interruptsEnabled) {\n      const { TWCR, twiInterrupt } = this.config;\n      if (this.cpu.data[TWCR] & TWCR_TWIE && this.cpu.data[TWCR] & TWCR_TWINT) {\n        avrInterrupt(this.cpu, twiInterrupt);\n        this.cpu.data[TWCR] &= ~TWCR_TWINT;\n      }\n    }\n  }\n\n  get prescaler() {\n    switch (this.cpu.data[this.config.TWSR] & TWSR_TWPS_MASK) {\n      case 0:\n        return 1;\n      case 1:\n        return 4;\n      case 2:\n        return 16;\n      case 3:\n        return 64;\n    }\n    // We should never get here:\n    throw new Error('Invalid prescaler value!');\n  }\n\n  get sclFrequency() {\n    return this.freqMHz / (16 + 2 * this.cpu.data[this.config.TWBR] * this.prescaler);\n  }\n\n  completeStart() {\n    this.updateStatus(this.status === STATUS_TWI_IDLE ? STATUS_START : STATUS_REPEATED_START);\n  }\n\n  completeStop() {\n    this.cpu.data[this.config.TWCR] &= ~TWCR_TWSTO;\n    this.updateStatus(STATUS_TWI_IDLE);\n  }\n\n  completeConnect(ack: boolean) {\n    if (this.cpu.data[this.config.TWDR] & 0x1) {\n      this.updateStatus(ack ? STATUS_SLAR_ACK : STATUS_SLAR_NACK);\n    } else {\n      this.updateStatus(ack ? STATUS_SLAW_ACK : STATUS_SLAW_NACK);\n    }\n  }\n\n  completeWrite(ack: boolean) {\n    this.updateStatus(ack ? STATUS_DATA_SENT_ACK : STATUS_DATA_SENT_NACK);\n  }\n\n  completeRead(value: u8) {\n    const ack = !!(this.cpu.data[this.config.TWCR] & TWCR_TWEA);\n    this.cpu.data[this.config.TWDR] = value;\n    this.updateStatus(ack ? STATUS_DATA_RECEIVED_ACK : STATUS_DATA_RECEIVED_NACK);\n  }\n\n  private get status() {\n    return this.cpu.data[this.config.TWSR] & TWSR_TWS_MASK;\n  }\n\n  private updateStatus(value: u8) {\n    const { TWCR, TWSR } = this.config;\n    this.cpu.data[TWSR] = (this.cpu.data[TWSR] & ~TWSR_TWS_MASK) | value;\n    this.cpu.data[TWCR] |= TWCR_TWINT;\n  }\n}\n","/**\n * AVR8js\n *\n * Copyright (C) 2019, 2020, Uri Shaked\n */\n\nexport { CPU, ICPU, CPUMemoryHook, CPUMemoryHooks } from './cpu/cpu';\nexport { avrInstruction } from './cpu/instruction';\nexport { avrInterrupt } from './cpu/interrupt';\nexport { AVRTimer, timer0Config, timer1Config, timer2Config } from './peripherals/timer';\nexport {\n  AVRIOPort,\n  GPIOListener,\n  AVRPortConfig,\n  portAConfig,\n  portBConfig,\n  portCConfig,\n  portDConfig,\n  portEConfig,\n  portFConfig,\n  portGConfig,\n  portHConfig,\n  portJConfig,\n  portKConfig,\n  portLConfig,\n  PinState,\n} from './peripherals/gpio';\nexport { AVRUSART, usart0Config } from './peripherals/usart';\nexport {\n  AVREEPROM,\n  AVREEPROMConfig,\n  EEPROMBackend,\n  EEPROMMemoryBackend,\n  eepromConfig,\n} from './peripherals/eeprom';\nexport * from './peripherals/twi';\n","/**\n * Minimal Intel HEX loader\n * Part of AVR8js\n *\n * Copyright (C) 2019, Uri Shaked\n */\n\nexport function loadHex(source: string, target: Uint8Array) {\n  for (const line of source.split('\\n')) {\n    if (line[0] === ':' && line.substr(7, 2) === '00') {\n      const bytes = parseInt(line.substr(1, 2), 16);\n      const addr = parseInt(line.substr(3, 4), 16);\n      for (let i = 0; i < bytes; i++) {\n        target[addr + i] = parseInt(line.substr(9 + i * 2, 2), 16);\n      }\n    }\n  }\n}\n","// Faster setTimeout(fn, 0) implementation using postMessage API\n// Based on https://dbaron.org/log/20100309-faster-timeouts\nexport type IMicroTaskCallback = () => void;\n\nexport class MicroTaskScheduler {\n  readonly messageName = 'zero-timeout-message';\n\n  private executionQueue: Array<IMicroTaskCallback> = [];\n  private stopped = true;\n\n  start() {\n    if (this.stopped) {\n      this.stopped = false;\n      window.addEventListener('message', this.handleMessage, true);\n    }\n  }\n\n  stop() {\n    this.stopped = true;\n    window.removeEventListener('message', this.handleMessage, true);\n  }\n\n  postTask(fn: IMicroTaskCallback) {\n    if (!this.stopped) {\n      this.executionQueue.push(fn);\n      window.postMessage(this.messageName, '*');\n    }\n  }\n\n  private handleMessage = (event: MessageEvent) => {\n    if (event.data === this.messageName) {\n      event.stopPropagation();\n      const executeJob = this.executionQueue.shift();\n      if (executeJob !== undefined) {\n        executeJob();\n      }\n    }\n  };\n}\n","//Edited version of demo file provided by Wokwi at https://github.com/wokwi/avr8js/blob/master/demo/src/execute.ts\n//Edited by Mark Megarry August 2020\nimport {\n  avrInstruction,\n  AVRTimer,\n  CPU,\n  timer0Config,\n  timer1Config,\n  timer2Config,\n  AVRIOPort,\n  AVRUSART,\n  portBConfig,\n  portCConfig,\n  portDConfig,\n  usart0Config,\n} from 'avr8js';\nimport { loadHex } from './intelhex';\nimport { MicroTaskScheduler } from './task-scheduler';\n\n// ATmega328p params\nconst FLASH = 0x8000;\nexport class AVRRunner {\n  readonly program = new Uint16Array(FLASH);\n  readonly cpu: CPU;\n  readonly timer0: AVRTimer;\n  readonly timer1: AVRTimer;\n  readonly timer2: AVRTimer;\n  readonly portB: AVRIOPort;\n  readonly portC: AVRIOPort;\n  readonly portD: AVRIOPort;\n  readonly usart: AVRUSART;\n  readonly speed = 16e6; // 16 MHZ\n  readonly workUnitCycles = 500000;\n  readonly taskScheduler = new MicroTaskScheduler();\n\n  constructor(hex: string) {\n    loadHex(hex, new Uint8Array(this.program.buffer));\n    this.cpu = new CPU(this.program);\n    this.timer0 = new AVRTimer(this.cpu, timer0Config);\n    this.timer1 = new AVRTimer(this.cpu, timer1Config);\n    this.timer2 = new AVRTimer(this.cpu, timer2Config);\n    this.portB = new AVRIOPort(this.cpu, portBConfig);\n    this.portC = new AVRIOPort(this.cpu, portCConfig);\n    this.portD = new AVRIOPort(this.cpu, portDConfig);\n    this.usart = new AVRUSART(this.cpu, usart0Config, this.speed);\n\t\n\t// Simulate analog port (so that analogRead() eventually return)\n    this.cpu.writeHooks[0x7a] = value => {\n\t\t//globalThis.console.log(value);\tCheck what value is\n      if (value & (1 << 6)) {\n        this.cpu.data[0x7a] = value & ~(1 << 6); // clear bit - conversion done\n\t\tconst ADMUXval = this.cpu.data[0x7c];\t//Value held in ADMUX selection register\n\t\tconst analogPin = ADMUXval & 15;\t//Apply mask to clear first 4 bits as only latter half is important for selection\n\t\tglobalThis.AVR8jsFalstad.Runner.portC.setAnalogValue(globalThis.AVR8jsFalstad.analogArray[analogPin]);\n        return true; // don't update\n      }\n    };\n\t\n    this.taskScheduler.start();\n\tglobalThis.AVR8jsFalstad.CircuitTime = new globalThis.JSCircuitTime;\t//Added by Mark Megarry\n\tglobalThis.AVR8jsFalstad.prevTime = globalThis.AVR8jsFalstad.CircuitTime.getTime(); //Added by Mark Megarry\n  }\n\t\n  // CPU main loop\n  //var timeDiff = globalThis.CircuitTime.getTime() - prevTime;\n  //var timeBasedCycles = timeDiff*speed;\n  execute(callback: (cpu: CPU) => any) {\n\tvar timeDiff = globalThis.AVR8jsFalstad.CircuitTime.getTime() - globalThis.AVR8jsFalstad.prevTime;\t//Added by Mark Megarry\n\tglobalThis.AVR8jsFalstad.timeBasedCycles = timeDiff*this.speed;\t//Added by Mark Megarry\n    const cyclesToRun = this.cpu.cycles + globalThis.AVR8jsFalstad.timeBasedCycles; //Edited by Mark Megarry\n    while (this.cpu.cycles < cyclesToRun) {\n      avrInstruction(this.cpu);\n      this.timer0.tick();\n      this.timer1.tick();\n      this.timer2.tick();\n      this.usart.tick();\n\t  \n    }\n\t//prevTime = CircuitTime.getTime();\n\tglobalThis.AVR8jsFalstad.prevTime = globalThis.AVR8jsFalstad.CircuitTime.getTime();\t//Added by Mark Megarry\n    callback(this.cpu);\n    this.taskScheduler.postTask(() => this.execute(callback));\n  }\n\n  stop() {\n    this.taskScheduler.stop();\n  }\n}\n","function zeroPad(value: number, length: number) {\n  let sval = value.toString();\n  while (sval.length < length) {\n    sval = '0' + sval;\n  }\n  return sval;\n}\n\nexport function formatTime(seconds: number) {\n  const ms = Math.floor(seconds * 1000) % 1000;\n  const secs = Math.floor(seconds % 60);\n  const mins = Math.floor(seconds / 60);\n  return `${zeroPad(mins, 2)}:${zeroPad(secs, 2)}.${zeroPad(ms, 3)}`;\n}\n","const AVRJS8_EDITOR_HISTORY = 'AVRJS8_EDITOR_HISTORY';\n\nexport class EditorHistoryUtil {\n  static hasLocalStorage = !!window.localStorage;\n\n  static storeSnippet(codeSnippet: string) {\n    if (!EditorHistoryUtil.hasLocalStorage) {\n      return;\n    }\n    window.localStorage.setItem(AVRJS8_EDITOR_HISTORY, codeSnippet);\n  }\n\n  static clearSnippet() {\n    if (!EditorHistoryUtil.hasLocalStorage) {\n      return;\n    }\n    localStorage.removeItem(AVRJS8_EDITOR_HISTORY);\n  }\n\n  static getValue() {\n    if (!EditorHistoryUtil.hasLocalStorage) {\n      return;\n    }\n    return localStorage.getItem(AVRJS8_EDITOR_HISTORY);\n  }\n}\n","//This is an edited version of the demo program provided by Wokwi at https://github.com/wokwi/avr8js/blob/master/demo/src/index.ts\n//Edited by Mark Megarry August 2020\n\nimport { PinState } from 'avr8js';\nimport { buildHex } from './compile';\nimport { CPUPerformance } from './cpu-performance';\nimport { AVRRunner } from './execute';\nimport { formatTime } from './format-time';\nimport './index.css';\nimport { EditorHistoryUtil } from './utils/editor-history.util';\nlet editor: any; // eslint-disable-line @typescript-eslint/no-explicit-any\n\nconst BLINK_CODE = `\n//Pin 7 is accessed by pin D7\n//Pin 13 is accessed by pin B5\n//Pin 11 is accessed by pin B3\n\nvoid setup() {\n  pinMode(13, OUTPUT);\n  pinMode(7, INPUT);\n  digitalWrite(13, LOW);\n  analogWrite(11, 100);\n   Serial.begin(115200);\n   Serial.println(\"Program is starting...\");\n}\n\nvoid loop() {\n  if(digitalRead(7) == HIGH){\n    digitalWrite(13, HIGH);\n  }\n\n  else if(digitalRead(7) == LOW){\n    digitalWrite(13, LOW);\n  }\n}`.trim();\n\n// Load Editor\ndeclare const window: any; // eslint-disable-line @typescript-eslint/no-explicit-any\ndeclare const monaco: any; // eslint-disable-line @typescript-eslint/no-explicit-any\nwindow.require.config({\n  paths: { vs: 'https://cdnjs.cloudflare.com/ajax/libs/monaco-editor/0.20.0/min/vs' },\n});\nwindow.require(['vs/editor/editor.main'], () => {\n  editor = monaco.editor.create(document.querySelector('.code-editor'), {\n    value: EditorHistoryUtil.getValue() || BLINK_CODE,\n    language: 'cpp',\n    minimap: { enabled: false },\n  });\n});\n\nconst runButton = document.querySelector('#run-button');\nrunButton.addEventListener('click', compileAndRun);\nconst stopButton = document.querySelector('#stop-button');\nstopButton.addEventListener('click', stopCode);\nconst revertButton = document.querySelector('#revert-button');\nrevertButton.addEventListener('click', setBlinkSnippet);\nconst statusLabel = document.querySelector('#status-label');\nconst compilerOutputText = document.querySelector('#compiler-output-text');\nconst serialOutputText = document.querySelector('#serial-output-text');\n\nfunction executeProgram(hex: string) {\n   globalThis.AVR8jsFalstad.Runner = new AVRRunner(hex);\n   const MHZ = 16000000;\n\n  globalThis.AVR8jsFalstad.Runner.usart.onByteTransmit = (value) => {\n    serialOutputText.textContent += String.fromCharCode(value);\n  };\n  const cpuPerf = new CPUPerformance(globalThis.AVR8jsFalstad.Runner.cpu, MHZ);\n  globalThis.AVR8jsFalstad.Runner.execute((cpu) => {\n    const time = formatTime(cpu.cycles / MHZ);\n    const speed = (cpuPerf.update() * 100).toFixed(0);\n    statusLabel.textContent = `Simulation time: ${time} (${speed}%)`;\n  });\n}\n\nasync function compileAndRun() {\n  storeUserSnippet();\n\n  runButton.setAttribute('disabled', '1');\n  revertButton.setAttribute('disabled', '1');\n\n  serialOutputText.textContent = '';\n  try {\n    statusLabel.textContent = 'Compiling...';\n    const result = await buildHex(editor.getModel().getValue());\n    compilerOutputText.textContent = result.stderr || result.stdout;\n    if (result.hex) {\n      compilerOutputText.textContent += '\\nProgram running...';\n      stopButton.removeAttribute('disabled');\n      executeProgram(result.hex);\n    } else {\n      runButton.removeAttribute('disabled');\n    }\n  } catch (err) {\n    runButton.removeAttribute('disabled');\n    revertButton.removeAttribute('disabled');\n    alert('Failed: ' + err);\n  } finally {\n    statusLabel.textContent = '';\n  }\n}\n\nfunction storeUserSnippet() {\n  EditorHistoryUtil.clearSnippet();\n  EditorHistoryUtil.storeSnippet(editor.getValue());\n}\n\nfunction stopCode() {\n  stopButton.setAttribute('disabled', '1');\n  runButton.removeAttribute('disabled');\n  //revertButton.removeAttribute('disabled');\n  if (globalThis.AVR8jsFalstad.Runner) {\n    globalThis.AVR8jsFalstad.Runner.stop();\n    globalThis.AVR8jsFalstad.Runner = null;\n  }\n}\n\nfunction setBlinkSnippet() {\n  editor.setValue(BLINK_CODE);\n  EditorHistoryUtil.storeSnippet(editor.getValue());\n}\n","var bundleURL = null;\nfunction getBundleURLCached() {\n  if (!bundleURL) {\n    bundleURL = getBundleURL();\n  }\n\n  return bundleURL;\n}\n\nfunction getBundleURL() {\n  // Attempt to find the URL of the current script and use that as the base URL\n  try {\n    throw new Error;\n  } catch (err) {\n    var matches = ('' + err.stack).match(/(https?|file|ftp|chrome-extension|moz-extension):\\/\\/[^)\\n]+/g);\n    if (matches) {\n      return getBaseURL(matches[0]);\n    }\n  }\n\n  return '/';\n}\n\nfunction getBaseURL(url) {\n  return ('' + url).replace(/^((?:https?|file|ftp|chrome-extension|moz-extension):\\/\\/.+)\\/[^/]+$/, '$1') + '/';\n}\n\nexports.getBundleURL = getBundleURLCached;\nexports.getBaseURL = getBaseURL;\n","var bundle = require('./bundle-url');\n\nfunction updateLink(link) {\n  var newLink = link.cloneNode();\n  newLink.onload = function () {\n    link.remove();\n  };\n  newLink.href = link.href.split('?')[0] + '?' + Date.now();\n  link.parentNode.insertBefore(newLink, link.nextSibling);\n}\n\nvar cssTimeout = null;\nfunction reloadCSS() {\n  if (cssTimeout) {\n    return;\n  }\n\n  cssTimeout = setTimeout(function () {\n    var links = document.querySelectorAll('link[rel=\"stylesheet\"]');\n    for (var i = 0; i < links.length; i++) {\n      if (bundle.getBaseURL(links[i].href) === bundle.getBundleURL()) {\n        updateLink(links[i]);\n      }\n    }\n\n    cssTimeout = null;\n  }, 50);\n}\n\nmodule.exports = reloadCSS;\n","var OVERLAY_ID = '__parcel__error__overlay__';\n\nvar OldModule = module.bundle.Module;\n\nfunction Module(moduleName) {\n  OldModule.call(this, moduleName);\n  this.hot = {\n    data: module.bundle.hotData,\n    _acceptCallbacks: [],\n    _disposeCallbacks: [],\n    accept: function (fn) {\n      this._acceptCallbacks.push(fn || function () {});\n    },\n    dispose: function (fn) {\n      this._disposeCallbacks.push(fn);\n    }\n  };\n\n  module.bundle.hotData = null;\n}\n\nmodule.bundle.Module = Module;\nvar checkedAssets, assetsToAccept;\n\nvar parent = module.bundle.parent;\nif ((!parent || !parent.isParcelRequire) && typeof WebSocket !== 'undefined') {\n  var hostname = process.env.HMR_HOSTNAME || location.hostname;\n  var protocol = location.protocol === 'https:' ? 'wss' : 'ws';\n  var ws = new WebSocket(protocol + '://' + hostname + ':' + process.env.HMR_PORT + '/');\n  ws.onmessage = function(event) {\n    checkedAssets = {};\n    assetsToAccept = [];\n\n    var data = JSON.parse(event.data);\n\n    if (data.type === 'update') {\n      var handled = false;\n      data.assets.forEach(function(asset) {\n        if (!asset.isNew) {\n          var didAccept = hmrAcceptCheck(global.parcelRequire, asset.id);\n          if (didAccept) {\n            handled = true;\n          }\n        }\n      });\n\n      // Enable HMR for CSS by default.\n      handled = handled || data.assets.every(function(asset) {\n        return asset.type === 'css' && asset.generated.js;\n      });\n\n      if (handled) {\n        console.clear();\n\n        data.assets.forEach(function (asset) {\n          hmrApply(global.parcelRequire, asset);\n        });\n\n        assetsToAccept.forEach(function (v) {\n          hmrAcceptRun(v[0], v[1]);\n        });\n      } else if (location.reload) { // `location` global exists in a web worker context but lacks `.reload()` function.\n        location.reload();\n      }\n    }\n\n    if (data.type === 'reload') {\n      ws.close();\n      ws.onclose = function () {\n        location.reload();\n      }\n    }\n\n    if (data.type === 'error-resolved') {\n      console.log('[parcel] ✨ Error resolved');\n\n      removeErrorOverlay();\n    }\n\n    if (data.type === 'error') {\n      console.error('[parcel] 🚨  ' + data.error.message + '\\n' + data.error.stack);\n\n      removeErrorOverlay();\n\n      var overlay = createErrorOverlay(data);\n      document.body.appendChild(overlay);\n    }\n  };\n}\n\nfunction removeErrorOverlay() {\n  var overlay = document.getElementById(OVERLAY_ID);\n  if (overlay) {\n    overlay.remove();\n  }\n}\n\nfunction createErrorOverlay(data) {\n  var overlay = document.createElement('div');\n  overlay.id = OVERLAY_ID;\n\n  // html encode message and stack trace\n  var message = document.createElement('div');\n  var stackTrace = document.createElement('pre');\n  message.innerText = data.error.message;\n  stackTrace.innerText = data.error.stack;\n\n  overlay.innerHTML = (\n    '<div style=\"background: black; font-size: 16px; color: white; position: fixed; height: 100%; width: 100%; top: 0px; left: 0px; padding: 30px; opacity: 0.85; font-family: Menlo, Consolas, monospace; z-index: 9999;\">' +\n      '<span style=\"background: red; padding: 2px 4px; border-radius: 2px;\">ERROR</span>' +\n      '<span style=\"top: 2px; margin-left: 5px; position: relative;\">🚨</span>' +\n      '<div style=\"font-size: 18px; font-weight: bold; margin-top: 20px;\">' + message.innerHTML + '</div>' +\n      '<pre>' + stackTrace.innerHTML + '</pre>' +\n    '</div>'\n  );\n\n  return overlay;\n\n}\n\nfunction getParents(bundle, id) {\n  var modules = bundle.modules;\n  if (!modules) {\n    return [];\n  }\n\n  var parents = [];\n  var k, d, dep;\n\n  for (k in modules) {\n    for (d in modules[k][1]) {\n      dep = modules[k][1][d];\n      if (dep === id || (Array.isArray(dep) && dep[dep.length - 1] === id)) {\n        parents.push(k);\n      }\n    }\n  }\n\n  if (bundle.parent) {\n    parents = parents.concat(getParents(bundle.parent, id));\n  }\n\n  return parents;\n}\n\nfunction hmrApply(bundle, asset) {\n  var modules = bundle.modules;\n  if (!modules) {\n    return;\n  }\n\n  if (modules[asset.id] || !bundle.parent) {\n    var fn = new Function('require', 'module', 'exports', asset.generated.js);\n    asset.isNew = !modules[asset.id];\n    modules[asset.id] = [fn, asset.deps];\n  } else if (bundle.parent) {\n    hmrApply(bundle.parent, asset);\n  }\n}\n\nfunction hmrAcceptCheck(bundle, id) {\n  var modules = bundle.modules;\n  if (!modules) {\n    return;\n  }\n\n  if (!modules[id] && bundle.parent) {\n    return hmrAcceptCheck(bundle.parent, id);\n  }\n\n  if (checkedAssets[id]) {\n    return;\n  }\n  checkedAssets[id] = true;\n\n  var cached = bundle.cache[id];\n\n  assetsToAccept.push([bundle, id]);\n\n  if (cached && cached.hot && cached.hot._acceptCallbacks.length) {\n    return true;\n  }\n\n  return getParents(global.parcelRequire, id).some(function (id) {\n    return hmrAcceptCheck(global.parcelRequire, id)\n  });\n}\n\nfunction hmrAcceptRun(bundle, id) {\n  var cached = bundle.cache[id];\n  bundle.hotData = {};\n  if (cached) {\n    cached.hot.data = bundle.hotData;\n  }\n\n  if (cached && cached.hot && cached.hot._disposeCallbacks.length) {\n    cached.hot._disposeCallbacks.forEach(function (cb) {\n      cb(bundle.hotData);\n    });\n  }\n\n  delete bundle.cache[id];\n  bundle(id);\n\n  cached = bundle.cache[id];\n  if (cached && cached.hot && cached.hot._acceptCallbacks.length) {\n    cached.hot._acceptCallbacks.forEach(function (cb) {\n      cb();\n    });\n    return true;\n  }\n}\n"]}