{"version":3,"sources":["webpack:///webpack/universalModuleDefinition","webpack:///webpack/bootstrap","webpack:///external {\"root\":\"Blockly\",\"commonjs\":\"blockly/core\",\"commonjs2\":\"blockly/core\",\"amd\":\"blockly/core\"}","webpack:///./src/index.js"],"names":["root","factory","exports","module","require","define","amd","a","i","this","__WEBPACK_EXTERNAL_MODULE__0__","installedModules","__webpack_require__","moduleId","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","FieldGridDropdown","FieldDropdown","menuGenerator","opt_validator","opt_config","super","columns_","setColumnsInternal_","options","undefined","columns","updateColumnsStyling_","parseInt","isNaN","opt_e","showEditor_","primaryColour","sourceBlock_","isShadow","getParent","getColour","borderColour","style","colourTertiary","DropDownDiv","setColour","utils","dom","addClass","menu_","getElement","showPositionedByField","dropdownDispose_","menuElement","gridTemplateColumns","fieldRegistry","register","Css"],"mappings":"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","file":"index.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory(require(\"blockly/core\"));\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([\"blockly/core\"], factory);\n\telse {\n\t\tvar a = typeof exports === 'object' ? factory(require(\"blockly/core\")) : factory(root[\"Blockly\"]);\n\t\tfor(var i in a) (typeof exports === 'object' ? exports : root)[i] = a[i];\n\t}\n})(this, function(__WEBPACK_EXTERNAL_MODULE__0__) {\nreturn "," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"/dist/\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 1);\n","module.exports = __WEBPACK_EXTERNAL_MODULE__0__;","/**\n * @license\n * Copyright 2020 Google LLC\n * SPDX-License-Identifier: Apache-2.0\n */\n\n/**\n * @fileoverview Grid dropdown field.\n * @author kozbial@google.com (Monica Kozbial)\n */\n\nimport Blockly from 'blockly/core';\n\n/**\n * Grid dropdown field.\n */\nexport class FieldGridDropdown extends Blockly.FieldDropdown {\n  /**\n   * Class for an grid dropdown field.\n   * @param {(!Array.<!Array>|!Function)} menuGenerator A non-empty array of\n   *     options for a dropdown list, or a function which generates these\n   *     options.\n   * @param {Function=} opt_validator A function that is called to validate\n   *    changes to the field's value. Takes in a language-neutral dropdown\n   *    option & returns a validated language-neutral dropdown option, or null\n   *    to abort the change.\n   * @param {Object=} opt_config A map of options used to configure the field.\n   *    See the [field creation documentation]{@link https://developers.google.com/blockly/guides/create-custom-blocks/fields/built-in-fields/dropdown#creation}\n   *    for a list of properties this parameter supports.\n   * @extends {Blockly.Field}\n   * @constructor\n   * @throws {TypeError} If `menuGenerator` options are incorrectly structured.\n   */\n  constructor(menuGenerator, opt_validator, opt_config) {\n    super(menuGenerator, opt_validator, opt_config);\n\n    /**\n     * The number of columns in the dropdown grid. Must be an integer value\n     * greater than 0. Defaults to 3.\n     * @type {number}\n     * @private\n     */\n    this.columns_ = 3;\n    if (opt_config && opt_config['columns']) {\n      this.setColumnsInternal_(opt_config['columns']);\n    }\n  }\n\n  /**\n   * Constructs a FieldGridDropdown from a JSON arg object.\n   * @param {!Object} options A JSON object with options.\n   * @return {!FieldGridDropdown} The new field instance.\n   * @package\n   * @nocollapse\n   */\n  static fromJson(options) {\n    return new FieldGridDropdown(options['options'], undefined, options);\n  }\n\n  /**\n   * Sets the number of columns on the grid. Updates the styling to reflect.\n   * @param {number} columns The number of columns. Is rounded to\n   *    an integer value and must be greater than 0. Invalid\n   *    values are ignored.\n   * @private\n   */\n  setColumns(columns) {\n    this.setColumnsInternal_(columns);\n    this.updateColumnsStyling_();\n  }\n\n  /**\n   * Sets the number of columns on the grid.\n   * @param {?(string|number|undefined)} columns The number of columns. Is\n   *    rounded to an integer value and must be greater than 0. Invalid\n   *    values are ignored.\n   * @private\n   */\n  setColumnsInternal_(columns) {\n    columns = parseInt(columns);\n    if (!isNaN(columns) && columns >= 1) {\n      this.columns_ = columns;\n    }\n  }\n\n  /**\n   * Create a dropdown menu under the text.\n   * @param {Event=} opt_e Optional mouse event that triggered the field to\n   *    open, or undefined if triggered programmatically.\n   * @protected\n   * @override\n   */\n  showEditor_(opt_e) {\n    super.showEditor_(opt_e);\n\n    // Grid dropdown is always colored.\n    const primaryColour = (this.sourceBlock_.isShadow()) ?\n        this.sourceBlock_.getParent().getColour() :\n        this.sourceBlock_.getColour();\n    const borderColour = (this.sourceBlock_.isShadow()) ?\n        this.sourceBlock_.getParent().style.colourTertiary :\n        this.sourceBlock_.style.colourTertiary;\n    Blockly.DropDownDiv.setColour(primaryColour, borderColour);\n\n    Blockly.utils.dom.addClass(\n        this.menu_.getElement(), 'fieldGridDropDownContainer');\n    this.updateColumnsStyling_();\n\n    Blockly.DropDownDiv.showPositionedByField(\n        this, this.dropdownDispose_.bind(this));\n  }\n\n  /**\n   * Updates the styling for number of columns on the dropdown.\n   * @private\n   */\n  updateColumnsStyling_() {\n    const menuElement = this.menu_ ? this.menu_.getElement() : null;\n    if (menuElement) {\n      menuElement.style.gridTemplateColumns =\n          `repeat(${this.columns_}, min-content)`;\n    }\n  }\n}\n\nBlockly.fieldRegistry.register('field_grid_dropdown', FieldGridDropdown);\n\n/**\n * CSS for slider field.\n */\nBlockly.Css.register([\n  /* eslint-disable indent */\n  `/** Setup grid layout of DropDown */\n  .fieldGridDropDownContainer.blocklyMenu {\n      display: grid;\n      grid-gap: 7px;\n    }\n  /* Change look of cells (add border, sizing, padding, and text color) */\n  .fieldGridDropDownContainer.blocklyMenu .blocklyMenuItem {\n    border: 1px solid rgba(1, 1, 1, 0.5);\n    border-radius: 4px;\n    color: white;\n    min-width: auto;\n    padding-left: 15px; /* override padding-left now that checkmark is hidden */\n  }\n  /* Change look of selected cell */\n  .fieldGridDropDownContainer .blocklyMenuItem .blocklyMenuItemCheckbox {\n    display: none; /* Hide checkmark */\n  }\n  .fieldGridDropDownContainer .blocklyMenuItem.blocklyMenuItemSelected {\n    background-color: rgba(1, 1, 1, 0.25);\n  }\n  /* Change look of focus/highlighted cell */\n  .fieldGridDropDownContainer .blocklyMenuItem.blocklyMenuItemHighlight {\n    box-shadow: 0 0 0 4px hsla(0, 0%, 100%, .2);\n  }\n  .fieldGridDropDownContainer .blocklyMenuItemHighlight {\n    /* Uses less selectors so as to not affect blocklyMenuItemSelected */\n    background-color: inherit;\n  }\n  .fieldGridDropDownContainer {\n    margin: 7px; /* needed for highlight */\n  }`,\n  /* eslint-enable indent */\n]);\n"],"sourceRoot":""}