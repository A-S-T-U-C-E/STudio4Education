{"version":3,"file":"index.js","mappings":"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","sources":["webpack://@blockly/field-grid-dropdown/webpack/universalModuleDefinition","webpack://@blockly/field-grid-dropdown/external umd {\"root\":\"Blockly\",\"commonjs\":\"blockly/core\",\"commonjs2\":\"blockly/core\",\"amd\":\"blockly/core\"}","webpack://@blockly/field-grid-dropdown/webpack/bootstrap","webpack://@blockly/field-grid-dropdown/webpack/runtime/compat get default export","webpack://@blockly/field-grid-dropdown/webpack/runtime/define property getters","webpack://@blockly/field-grid-dropdown/webpack/runtime/hasOwnProperty shorthand","webpack://@blockly/field-grid-dropdown/webpack/runtime/make namespace object","webpack://@blockly/field-grid-dropdown/./src/index.js"],"sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory(require(\"blockly/core\"));\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([\"blockly/core\"], factory);\n\telse {\n\t\tvar a = typeof exports === 'object' ? factory(require(\"blockly/core\")) : factory(root[\"Blockly\"]);\n\t\tfor(var i in a) (typeof exports === 'object' ? exports : root)[i] = a[i];\n\t}\n})(this, function(__WEBPACK_EXTERNAL_MODULE__573__) {\nreturn ","module.exports = __WEBPACK_EXTERNAL_MODULE__573__;","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = (module) => {\n\tvar getter = module && module.__esModule ?\n\t\t() => (module['default']) :\n\t\t() => (module);\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","/**\n * @license\n * Copyright 2020 Google LLC\n * SPDX-License-Identifier: Apache-2.0\n */\n\n/**\n * @fileoverview Grid dropdown field.\n * @author kozbial@google.com (Monica Kozbial)\n */\n\nimport Blockly from 'blockly/core';\n\n/**\n * Grid dropdown field.\n */\nexport class FieldGridDropdown extends Blockly.FieldDropdown {\n  /**\n   * Class for an grid dropdown field.\n   * @param {(!Array.<!Array>|!Function)} menuGenerator A non-empty array of\n   *     options for a dropdown list, or a function which generates these\n   *     options.\n   * @param {Function=} validator A function that is called to validate\n   *    changes to the field's value. Takes in a language-neutral dropdown\n   *    option & returns a validated language-neutral dropdown option, or null\n   *    to abort the change.\n   * @param {Object=} config A map of options used to configure the field.\n   *    See the [field creation documentation]{@link https://developers.google.com/blockly/guides/create-custom-blocks/fields/built-in-fields/dropdown#creation}\n   *    for a list of properties this parameter supports.\n   * @extends {Blockly.Field}\n   * @constructor\n   * @throws {TypeError} If `menuGenerator` options are incorrectly structured.\n   */\n  constructor(menuGenerator, validator = undefined, config = undefined) {\n    super(menuGenerator, validator, config);\n\n    /**\n     * The number of columns in the dropdown grid. Must be an integer value\n     * greater than 0. Defaults to 3.\n     * @type {number}\n     * @private\n     */\n    this.columns_ = 3;\n    if (config && config['columns']) {\n      this.setColumnsInternal_(config['columns']);\n    }\n\n    if (config && config['primaryColour']) {\n      this.primaryColour = config['primaryColour'];\n    }\n\n    if (config && config['borderColour']) {\n      this.borderColour = config['borderColour'];\n    }\n  }\n\n  /**\n   * Constructs a FieldGridDropdown from a JSON arg object.\n   * @param {!Object} options A JSON object with options.\n   * @return {!FieldGridDropdown} The new field instance.\n   * @package\n   * @nocollapse\n   */\n  static fromJson(options) {\n    return new FieldGridDropdown(options['options'], undefined, options);\n  }\n\n  /**\n   * Sets the number of columns on the grid. Updates the styling to reflect.\n   * @param {number} columns The number of columns. Is rounded to\n   *    an integer value and must be greater than 0. Invalid\n   *    values are ignored.\n   * @private\n   */\n  setColumns(columns) {\n    this.setColumnsInternal_(columns);\n    this.updateColumnsStyling_();\n  }\n\n  /**\n   * Sets the number of columns on the grid.\n   * @param {?(string|number|undefined)} columns The number of columns. Is\n   *    rounded to an integer value and must be greater than 0. Invalid\n   *    values are ignored.\n   * @private\n   */\n  setColumnsInternal_(columns) {\n    columns = parseInt(columns);\n    if (!isNaN(columns) && columns >= 1) {\n      this.columns_ = columns;\n    }\n  }\n\n  /**\n   * Create a dropdown menu under the text.\n   * @param {Event=} e Optional mouse event that triggered the field to\n   *    open, or undefined if triggered programmatically.\n   * @protected\n   * @override\n   */\n  showEditor_(e = undefined) {\n    super.showEditor_(e);\n\n    // Dropdown should match block colour unless other colours are specified\n    // in the config.\n    const blockPrimaryColour = (this.sourceBlock_.isShadow()) ?\n        this.sourceBlock_.getParent().getColour() :\n        this.sourceBlock_.getColour();\n    const blockBorderColour = (this.sourceBlock_.isShadow()) ?\n        this.sourceBlock_.getParent().style.colourTertiary :\n        this.sourceBlock_.style.colourTertiary;\n    const primaryColour = this.primaryColour || blockPrimaryColour;\n    const borderColour = this.borderColour || blockBorderColour;\n    Blockly.DropDownDiv.setColour(primaryColour, borderColour);\n\n    Blockly.utils.dom.addClass(\n        this.menu_.getElement(), 'fieldGridDropDownContainer');\n    this.updateColumnsStyling_();\n\n    Blockly.DropDownDiv.showPositionedByField(\n        this, this.dropdownDispose_.bind(this));\n  }\n\n  /**\n   * Updates the styling for number of columns on the dropdown.\n   * @private\n   */\n  updateColumnsStyling_() {\n    const menuElement = this.menu_ ? this.menu_.getElement() : null;\n    if (menuElement) {\n      menuElement.style.gridTemplateColumns =\n          `repeat(${this.columns_}, min-content)`;\n    }\n  }\n}\n\nBlockly.fieldRegistry.register('field_grid_dropdown', FieldGridDropdown);\n\n/**\n * CSS for slider field.\n */\nBlockly.Css.register([\n  /* eslint-disable indent */\n  `/** Setup grid layout of DropDown */\n  .fieldGridDropDownContainer.blocklyMenu {\n      display: grid;\n      grid-gap: 7px;\n    }\n  /* Change look of cells (add border, sizing, padding, and text color) */\n  .fieldGridDropDownContainer.blocklyMenu .blocklyMenuItem {\n    border: 1px solid rgba(1, 1, 1, 0.5);\n    border-radius: 4px;\n    color: white;\n    min-width: auto;\n    padding-left: 15px; /* override padding-left now that checkmark is hidden */\n  }\n  /* Change look of selected cell */\n  .fieldGridDropDownContainer .blocklyMenuItem .blocklyMenuItemCheckbox {\n    display: none; /* Hide checkmark */\n  }\n  .fieldGridDropDownContainer .blocklyMenuItem.blocklyMenuItemSelected {\n    background-color: rgba(1, 1, 1, 0.25);\n  }\n  /* Change look of focus/highlighted cell */\n  .fieldGridDropDownContainer .blocklyMenuItem.blocklyMenuItemHighlight {\n    box-shadow: 0 0 0 4px hsla(0, 0%, 100%, .2);\n  }\n  .fieldGridDropDownContainer .blocklyMenuItemHighlight {\n    /* Uses less selectors so as to not affect blocklyMenuItemSelected */\n    background-color: inherit;\n  }\n  .fieldGridDropDownContainer {\n    margin: 7px; /* needed for highlight */\n  }`,\n  /* eslint-enable indent */\n]);\n"],"names":["root","factory","exports","module","require","define","amd","a","i","this","__WEBPACK_EXTERNAL_MODULE__573__","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","undefined","__webpack_modules__","n","getter","__esModule","d","definition","key","o","Object","defineProperty","enumerable","get","obj","prop","prototype","hasOwnProperty","call","r","Symbol","toStringTag","value","FieldGridDropdown","menuGenerator","validator","config","columns_","setColumnsInternal_","primaryColour","borderColour","columns","updateColumnsStyling_","parseInt","isNaN","e","blockPrimaryColour","sourceBlock_","isShadow","getParent","getColour","blockBorderColour","style","colourTertiary","Blockly","menu_","getElement","dropdownDispose_","bind","menuElement","gridTemplateColumns","options"],"sourceRoot":""}